{"path":"GenAIUnleaning/General_techniques/Image Image constrained.pdf","text":"Controllable Unlearning for Image-to-Image Generative Models via ε-Constrained Optimization Xiaohua Feng College of Computer Science Zhejiang University fengxiaohua@zju.edu.cn Chaochao Chen College of Computer Science Zhejiang University zjuccc@zju.edu.cn Yuyuan Li College of Communication Engineering Hangzhou Dianzi University y2li@hdu.edu.cn Li Zhang College of Computer Science Zhejiang University zhanglizl80@gmail.com Abstract While generative models have made significant advancements in recent years, they also raise concerns such as privacy breaches and biases. Machine unlearning has emerged as a viable solution, aiming to remove specific training data, e.g., containing private information and bias, from models. In this paper, we study the machine unlearning problem in Image-to-Image (I2I) generative models. Previous studies mainly treat it as a single objective optimization problem, offering a solitary solution, thereby neglecting the varied user expectations towards the trade-off between complete unlearning and model utility. To address this issue, we propose a controllable unlearning framework that uses a control coefficient ε to control the trade-off. We reformulate the I2I generative model unlearning problem into a ε-constrained optimization problem and solve it with a gradient-based method to find optimal solutions for unlearning boundaries. These boundaries define the valid range for the control coefficient. Within this range, every yielded solution is theoretically guaranteed with Pareto optimality. We also analyze the convergence rate of our framework under various control functions. Extensive experiments on two benchmark datasets across three mainstream I2I models demonstrate the effectiveness of our controllable unlearning framework. 1 Introduction Generative models have recently made significant progress in fields such as image recognition [29, 16] and natural language processing [45, 61], capturing significant academic interest due to their boundless generative potential. Typically trained on vast datasets from the Internet, generative models inevitably assimilate latent biases and expose private information [55]. Existing studies [34, 60, 8] have revealed that generative models have a strong tendency to recall specific instances encountered during training, raising concerns that the models might output biases and leak private information when put into practical situations. Machine unlearning [43] presents a viable solution to address this issue. It aims to eliminate the knowledge learned from specific training data (forget set) while preserving the knowledge learned from the remaining data (retain set). Implementing unlearning for generative models serves dual objectives, i.e., fulfilling privacy re- quirements and enhancing model reliability. On the one hand, legislation such as the General Data Protection Regulation [63] grants individuals the right to be forgotten. Consequently, service providers must unlearn specific private information from the model in response to an individual’s Preprint. Under review.arXiv:2408.01689v2 [cs.LG] 14 Sep 2024 Boundary-𝜺𝒎𝒂𝒙 Lowest Degree Forget Set Retain Set Feasible Region Pareto Optimal Points Degree of CompletenessModel UtilityNon-Pareto Optimal Points 𝟎 𝜺𝒎𝒊𝒏 𝜺𝟐 𝜺𝟏 𝜺𝒎𝒂𝒙 Pareto Front 𝜺𝟑 Ground Truth Input Original Model Boundary-𝜺𝒎𝒊𝒏 Highest Degree Relax-𝜺𝟏 25% Relax-𝜺𝟐 50% Relax-𝜺𝟑 75% Figure 1: An overview of controllable unlearning. On the left, the first and second rows represent the forget set and the retain set, respectively. We first present the effect of unlearning in I2I generative models, followed by a collection of controllable solutions, where ε is the control coefficient. On the right, we demonstrate that for each ε, our solution is guaranteed with the Pareto optimality. request. On the other hand, the data available on the Internet is rife with biases and inaccuracies, which compromises model performance when used for training. By proactively unlearning the biased and inaccurate data, the service providers can improve the liability of their models. In this paper, we focus on the unlearning problem in Image-to-Image (I2I) generative models [69], where unlearning is defined by the model’s incapacity to reconstruct the full image from a partially cropped one [36], as shown in Figure 1. Previous study [36] frames machine unlearning in generative models as a single-objective optimization problem, with the loss defined as a combination of perfor- mance on both the forget and retain sets. However, this approach faces three main challenges: i) First and foremost, this approach offers a solitary resolution, ignoring the real-world need for flexible trade-offs between model utility and unlearning completeness aligned with varying user expectations. Regrettably, this challenge remains overlooked in the majority of current research on unlearning. ii) This approach relies wholly on fine-tuning with manual terminating conditions, lacking a theoretical guarantee for convergence. iii) This approach integrates two optimization objectives into a single loss function, which compromises unlearning efficiency due to the competition or conflict between different objectives. To address these challenges, we propose a controllable unlearning approach that provides a set of Pareto optimal solutions to cater to varied user expectations. Users can select a solution based on the degree of unlearning completeness through a simple control coefficient ε. Specifically, we reframe machine unlearning of I2I generative models into a bi-objective optimization problem [31], i.e., unlearning the forget set (1st objective, unlearning completeness) while preserving the retain set (2nd objective, model utility). Due to legislation requirements, the first objective prioritizes the second objective, meaning that minimizing the negative impact on the retain set only arises once the unlearning objective is sufficiently optimized. Therefore, we reformulate the bi-objective optimization problem into a ε-constrained optimization problem, where the unlearning objective is treated as a constraint (primary to satisfy) and ε is the control coefficient. Utilizing gradient-based methods to solve this ε-constrained optimization, we can obtain two Pareto optimal solutions for the boundaries of unlearning with theoretical guarantee, which can be used to determine the valid range of values for ε. Subsequently, we select the value of ε within its valid range and relax the constraints on the unlearning objective by increasing ε. As a result, we obtain a set of solutions that dynamically fulfill user’s varied expectations regarding the trade-off between unlearning completeness and model utility. Finally, to enhance the efficiency of unlearning, we analyze the convergence rates of our unlearning framework under various settings of the control function which is utilized to govern the direction of parameter updates. The main contributions of this paper are summarized as follows: • We focus on I2I generative models, and propose a controllable unlearning approach that balances unlearning completeness and model utility, providing a set of solutions to fulfill varied user expectations. To the best of our knowledge, we are the first to study controllable unlearning. • We reformulate the machine unlearning of generative models as a ε-constrained optimization problem with unlearning the forget set as the constraint, guaranteeing optimal theoretical solutions for the boundaries of unlearning. By progressively relaxing the unlearning constraint, we obtain the Pareto set and plot the corresponding Pareto front. 2 • We utilize gradient-based methods to solve the ε-constrained optimization problem. To enhance the efficiency of unlearning, we analyze our framework’s performance across different settings of the control function and validate with multiple combinations. • We conduct extensive experiments to evaluate our proposed method over diverse I2I generative models. The results from two large datasets demonstrate that the Pareto optimal solutions yielded by our method significantly outperform baseline methods. Additionally, the solution set achieves controllable unlearning to fulfill varied expectations regarding the trade-off between unlearning completeness and model utility. 2 Related Work 2.1 I2I Generative Models Many computer vision tasks can be formulated as I2I generation processes, e.g., style transfer [74], im- age extension [9], restoration [59], and image synthesis [71]. There are mainly three architectures for I2I generative models, i.e., Auto-Encoders (AEs) [1], Generative Adversarial Networks (GANs) [24], and diffusion models [29]. AEs mainly aim to reduce the mean squared error between generated and ground truth images but often produce lower-quality outputs [17, 19]. GANs, through adversarial training, significantly improve generation quality, despite their unstable training [2, 26, 7]. Diffusion models, which use a diffusion-then-denoising approach, aim for stable training and high-quality generation by minimizing the distributional distance between generated images and ground truth images [29, 57, 54]. However, diffusion models require a greater amount of data and computational resources [52, 50]. In this paper, we aim to design a universal unlearning method that can be applied across different I2I models. 2.2 Machine Unlearning Machine unlearning aims to eliminate the influence of specific training data (unlearning target) from a trained model. A naive approach is to retrain the model from scratch using a modified dataset that excludes the unlearning target. However, this approach can be computationally prohibitive in practice. Based on the degree of unlearning completeness, machine unlearning can be categorized into exact unlearning and approximate unlearning [67]. Exact unlearning aims to ensure that the unlearning target is fully unlearned, i.e., as complete as retraining from scratch [5, 68, 38]. This approach, which typically relies on retraining, is limited to unlearning specific instances and cannot be readily extended to generative models with strong feature generalizations. Approximate unlearning aims to obtain an approximate model, whose performance closely aligns with a retrained model [22, 56]. This approach estimates the influence of unlearning targets, and updates the model accordingly, usually through gradient-based updates, avoiding full retraining [3, 40]. However, accurate influence estimation is still challenging [25], reducing the applicability of this approach to generative models. In generative models, the exploration of unlearning is accomplished by minimizing a composite loss, which is a combination of training loss on the retain and the forget sets [36]. This approach is highly dependent on manual parameter tuning and cannot guarantee unlearning completeness. As for comparison, the solutions yielded by our proposed controllable unlearning framework are theoretically guaranteed with Pareto optimality. 3 Preliminary 3.1 Unlearning Principles As outlined in [11, 39], an unlearning task typically has three main principles: i) unlearning com- pleteness, which involves eliminating the influence of specific data from an already trained model; ii) unlearning efficiency, which focuses on enhancing the speed of the unlearning process; and iii) model utility, which aims to ensure that the performance of the unlearned model remains comparable to that of a model retrained from scratch. 3 3.2 Pareto Optimality Consider a multi-objective optimization problem formulated as: minθ f (θ) = (f1(θ), f2(θ), · · · , fm(θ))⊤, where fi(θ) denotes the loss for the i-th objective. Pareto dominance. Let θa, θb be two points in feasible set Ω, θa is said to dominate θb (θa ≺ θb) if and only if fi (θa) ≤ fi (θb) , ∀i ∈ {1, . . . , m} and fj (θa) < fj (θb) , ∃j ∈ {1, . . . , m}. Pareto optimality [41]. A point θ∗ is Pareto optimal if there is no ˆθ ∈ Ω for which ˆθ ≺ θ∗. The collection of all such Pareto optimal points forms the Pareto set, and the surface of this set in the loss space is called the Pareto front. 3.3 I2I Generative Model Unlearning Model architecture. Encoder-decoder structures are widely used in I2I models, with: i) an encoder Eγ reducing images to the latent space, and ii) a decoder Dϕ reconstructing images from the latent space. For model Iθ with input image x, the output is: Iθ(x) = Dϕ(Eγ(T (x))), (1) where T (x) denotes the cropping operation (such as center cropping or random cropping), and θ = {γ, ϕ} denotes the full parameter set. Unlearning objective. Define the unlearning task for an I2I generative model Iθ0 involving data partitions Df (forget set) and Dr (retain set). Consider an Iθ0 , i.e., the original model, with training data D = Df ∪ Dr. Assume that Iθ0 is proficiently trained to generate satisfactory results on both Df and Dr. The objective of unlearning is to obtain an unlearned model Iθ that cannot generate satisfactory results on Df (1st objective, unlearning completeness) while maintaining comparable performance on DR (2nd objective, model utility). Formally, max θ (Div(P(Xf )∥P(Iθ(T (Xf ))))), and min θ (Div(P(Xr)∥P(Iθ(T (Xr))) )), (2) where Xf and Xr are the variables for ground truth images in Df and Dr, P(Iθ(X)) is the model output distribution for input variable X, and Div(·||·) represents distributional distance, measured by Kullback-Leibler (KL) divergence in this paper. Following prior work [32, 66, 64], as the model is proficiently trained, we hypothesize that Iθ0 can approximately replicate the distributions over both forget and retain sets [32, 66, 64], i.e., P(Xf ) ≈ P(Iθ0 (T (Xf ))), and P(Xr) ≈ P(Iθ0(T (Xr))). Let PX := P(Iθ0 (T (X))) and P ˆX := P(Iθ(T (X))). Then, Eq. (2) can be simplified to: max θ Div(PXf ||P ˆXf ), and min θ Div(PXr ||P ˆXr), (3) where PXf and P ˆXf represent the output distributions of the forget set before and after unlearning respectively. Similarly, PXr and P ˆXr represent those for the retain set. 4 Methodology In this section, we first introduce a controllable unlearning framework for I2I generative models, which formulates unlearning as a constrained optimization with the unlearning objective as a constraint. We utilize a gradient-based method to obtain the boundaries of unlearning. Then we relax the constraint within the boundaries to derive a set of Pareto optimal solutions to fulfill varied user expectations. 4.1 ε-Constrained Optimization Formulation The unlearning task for I2I models is reformulated as a bi-objective optimization (Eq. (3)), with the first objective to maximize Div(PXf ||P ˆXf ). Nonetheless, the value of Div(·||·) can theoretically be maximized to infinity, yielding an infinite number of possible P ˆXf [36], consequently resulting in extremely diminished model utility. To balance unlearning completeness and model utility, we bound Div(PXf ||P ˆXf ) by Lemma 1. 4 Lemma 1 (Divergence Upper Bound [13]). Assuming the forget set with distribution PXf character- ized by a zero-mean and covariance matrix Σ, and a signal P ˆXf with the same statistical properties, the maximal KL divergence is realized when P ˆXf = N (0, Σ). Div(PXf ||P ˆXf ) ≤ Div(PXf ||N (0, Σ)). (4) As image normalization typically involves mean subtraction [18], we can assume PXf and P ˆXf follow zero-mean distributions for conciseness without sacrificing generality. Lemma 1 reveals that the upper bound of Div(PXf ||P ˆXf ) is achieved when P ˆXf ∼ N (0, Σ). This suggests that maximizing Div(PXf ||P ˆXf ) equates to minimizing Div(P ˆXf ||N (0, Σ)). Consequently, we rewrite Eq. (3) as: min θ Div(N (0, Σ)||P ˆXf ), and min θ Div(PXr ||P ˆXr ). (5) As both terms in Eq. (5) depend on θ, we define f1(θ) := Div(N (0, Σ)||P ˆXf ) and f2(θ) := Div(PXr ||P ˆXr ) for conciseness. However, unlike classification models where their outputs are precisely univariate discrete distributions [35, 72], high-dimensional KL divergence calculations in I2I generative models are intractable. Thus, following [36], we adopt the L2 loss as a surrogate. Due to privacy legal requirements, unlearning objectives typically takes precedence. Thus, we set f1(θ) as the primary constraint and treat Eq. (5) as a ε-constrained optimization problem: min θ∈Rd f2(θ) s.t. f1(θ) ≤ ε, (6) where ε is a parameter to control the completeness of unlearning. We minimize f2(θ) inside the feasible set Ω = {θ : f1(θ) ≤ ε}, which implies that our priority lies in unlearning the forget set rather than mitigating performance degradation on the retain set. 4.2 Solving the ε-Constraint Optimization To solve the ε-constrained optimization problem in Eq. (6), approaches such as Sequential Quadratic Programming (SQP) [44, 4], penalty function method [70], and interior point method [48] are com- monly employed. Given the extensive parameter set of the I2I generative model, we select a special variant of the SQP algorithm for its lower complexity and comparable convergence guarantee [44, 21]. Specifically, we employ a gradient-based method to solve Eq. (6), updating the parameter by θt+1 ←− θt − µtgt. Here, µt denotes the step size, and gt represents the direction of the parameter update, which is determined by solving a convex quadratic programming problem w.r.t. g (for a detailed derivation, refer to the Appendix C.1): gt = min g∈Rd { ∥∇f2(θt) − g∥ 2 s.t. ∇f1(θt)⊤g ≥ f1(θt) − ε} . (7) Due to the inability to obtain the effective range of ε in the early stages of unlearning, direct computation of f1(θt) − ε is not feasible. Consequently, we adjust the constraint of Eq. 7 by employing a control function ψ(θt) (i.e., ∇f1(θt) ⊤g ≥ ψ(θt)), which must satisfy sign(ψ(θt)) = sign(f1(θt) − ε), where sign(x) = x/|x| for x ̸= 0 and sign(0) = 0. This ensures that the direction of updates remains as consistent as possible before and after the substitution. Further, we provide a summary of our proposed unlearning algorithm in Algorithm 1 (see Appendix B). Assumption 1. Assume f1(θ) and f2(θ) are continuously differentiable, and the trajectory {θt : t ∈ [0, +∞)} follows the continuous-time dynamics ˙θt = −gt, where gt is defined in Eq. (7) and maxt∈[0,+∞) ηt < +∞. The convergence analysis of Algorithm 1 regarding Eq. (6) utilizes the continuous-time framework given by ˙θt = −gt, as mentioned in Assumption 1. Please refer to Theorem 2 in Appendix C.2 for further details of convergence. 4.3 A Controllable Unlearning Framework Our controllable unlearning framework consists of two phases. In Phase I, we reformulate Eq. (6) into a special form to obtain the solution for the boundaries of unlearning. In Phase II, we adjust the value ε within its valid range to relax the unlearning constraint and obtain the Pareto optimal solutions for controllable unlearning. This relaxation of unlearning completeness allows for a controllable trade-off between completeness and model utility, thereby catering to varied user expectations. 5 (b) Controllable Unlearning 𝒇𝟏 ∗ 𝒇𝟐 ∗ 𝜽𝒕𝜽𝒕+𝟏 𝒇(𝜽) 𝟎 𝒇𝟐(𝜽) 𝒇𝟏(𝜽) Parameter 𝜽 update direction 𝜺𝒎𝒊𝒏 𝜽𝟏 ∗ 1 Lowest Unlearning Completeness 𝒇𝟏 ∗ 𝒇𝟐 ∗ 𝜽𝒕 𝜽𝒕+𝟏 𝜽 𝒇(𝜽) 𝟎 𝒇𝟐(𝜽) 𝒇𝟏(𝜽) 𝜺𝒎𝒂𝒙 Parameter 𝜽 update direction 𝜽𝟐 ∗ 2 Phase I Highest Unlearning Completeness 𝜽 𝜽 𝒇𝟏 ∗ 𝜽𝒕𝜽𝒕+𝟏 𝒇𝟐 ∗ 𝜽𝒕+𝟏𝜽𝒕𝟎 𝜺 𝜺𝒎𝒊𝒏 Relax Strict 𝜺𝒎𝒂𝒙 Case2: 𝒇𝟏 𝜽𝒕 ≤ 𝜺 Case1: 𝒇𝟏 𝜽𝒕 > 𝜺𝒇(𝜽) Feasible Region −𝜵𝒇𝟏(𝜽𝒕) −𝜵𝒇𝟐(𝜽𝒕) −𝒈𝒕Random Sample Phase II 𝜺 ∶ Control Coefficient of Unlearning Completeness 𝒇𝟏(𝜽) 𝒇𝟐(𝜽) 𝑥𝑓 𝑥𝑟 Forget set Retain set𝓝(𝟎, 𝜮) 𝑥𝑛 𝐼𝜃(𝒯(𝑥𝑓)) 𝐼𝜃0(𝒯(𝑥𝑛)) 𝐼𝜃(𝒯(𝑥𝑟))𝐼𝜃0(𝒯(𝑥𝑟)) Min 𝒇𝟐(𝜽) Target model Original model Constraint 𝒇𝟏(𝜽) 𝜺 Objective (a) 𝜺-Constrained Optimization Encoder Decoder Encoder Decoder Figure 2: Pipeline of the controllable unlearning framework. (a) shows the unlearning task of the I2I generative model which is framed as a ε-constrained optimization problem. (b) shows that the implementation of controllable unlearning unfolds in two phases: i) initially identifying two boundary points of unlearning, necessitating a strict reduction in f1(θ) (or f2(θ)) for optimality; and ii) then locating the given ε’s Pareto optimal point, with strict reduction in f1(θ) when f1(θt) > ε and permitting an increase when f1(θt) ≤ ε. Phase I: Boundaries of unlearning. The boundaries of unlearning refer to the two Pareto optimal solutions with the highest and lowest degrees of unlearning completeness. To obtain the Pareto optimal solutions with the highest degrees of unlearning completeness, we reformulate Eq. (6)into the following special form: min θ∈Rd f2(θ) s.t. f1(θ) ≤ ε, where ε = f ∗ 1 , and f ∗ 1 := inf θ∈Rd f1(θ). (8) The solution of this optimization problem can be obtained by Algorithm 1. According to Assump- tion 1, we need to ensure that ψ(θ) ≥ 0 in Eq. (8) to guarantee the same sign with f1(θ) − ε. In this paper, we we simply define ψ(θ) = α∥∇f1(θ)∥ δ with α > 0 and δ ≥ 1. Proposition 1 (Boundary of Pareto Set). Under Assumption 1, let f ∗ 1 > −∞ and f ∗ 2 > −∞ be the infimum of f1(θ), f2(θ), respectively. Further, let ψ(θ) be continuous and ∇f1(θ) be continuously differentiable. If θt → θ∗ and gt → 0 as t → +∞, with ∇2f1(θ) of constant rank near θ∗ and f1(θ), f2(θ) being convex near θt, then θ∗ is a Pareto optimal solution and f1(θ∗) = f ∗ 1 . Proof. The proof can be found in Appendix C.3. Proposition 1 ensures that the solution θ∗ 1 obtained by Algorithm 1 for solving Eq. (8) is on the boundary of the Pareto set, specifically refer to the highest degree of unlearning completeness. Meanwhile, f1(θ∗ 1) achieve the infimum of f1(θ). Obtaining the Pareto optimal solution with the lowest unlearning completeness is similar to the process mentioned above, with the difference of exchanging the positions of f1(θ) and f2(θ) in Eq. (8). This new problem is formulated as minθ∈Rd f1(θ), s.t. f2(θ) ≤ ε, where ε = f ∗ 2 , and f ∗ 2 := inf θ∈Rd f2(θ). The solution θ∗ 2 obtained by solving this problem is another boundary the Pareto set, i.e., the Pareto optimal solution with the lowest unlearning completeness, with f2(θ∗ 2) achieving the infimum of f2(θ). Phase II: Controllable unlearning. To adjust the trade-off between unlearning completeness and model utility, we relax the unlearning constraint by defining f1(θ∗ 1) < ε < f1(θ∗ 2) in Eq. (6), where θ∗ 1 and θ∗ 2 have already been obtained in Phase I. Then we rewrite Eq. (8) for controllable unlearning: min θ∈Rd f2(θ) s.t. f1(θ) ≤ ε, where ε > f ∗ 1 , and f ∗ 1 := inf θ∈Rd f1(θ), (9) 6 where ε ∈ R is used to adjust the completeness of unlearning. In Phase II, according to the sign condition in Assumption 1, we simply set ψ(θ) = β(f1(θ) − ε) δ with β > 0, δ = 2n + 1 and n ∈ N. Proposition 2 (Interior of Paret Set). Under Assumption 1, let f ∗ 2 = inf θ∈Rd f2(θ) > −∞ and supt∈[0,+∞) ηt = ηmax < +∞. If θt is a stationary point with gt = 0 and ηt < +∞, and both f1(θ) and f2(θ) are convex at θt, then θt is a Pareto optimal solution w.r.t. ε. Proof. The proof can be found in Appendix C.4. From Proposition 2, Eq. (9) provides a Pareto optimal solution w.r.t. ε. By progressively increasing ε from f ∗ 1 , which is estimated by f1(θ∗ 1) in Phase I, we can trace a path of Pareto optimal solutions for different completeness of unlearning. As a result, this path offers controllable unlearning for varied user expectations. 4.4 Enhancing the Efficiency of Unlearning To enhance the efficiency of unlearning, we investigate the influence of the control function ψ(θ) on convergence rates across different phases, as outlined in the proposition below: Proposition 3. Under Assumption 1, with f ∗ 2 = inf θ∈Rd f2(θ) > −∞, then: 1. For Phase I, if ψ(θ) = α∥∇f1(θ)∥ δ with α > 0 and δ ≥ 1, the convergence rates of f1(θ) and f2(θ) are O ( 1/t 1 δ ) and O (1/t 1 2 − 1 2δ ), respectively. 2. For Phase II, if ψ(θ) = β(f1(θ)−ε) δ with β > 0, δ = 2n+1, n ∈ N, and supt∈[0,+∞) ηt = ηmax < +∞, the convergence rate of [f1(θ) − ε]+ is O (1/t 1 δ ). Proof. The proof can be found in Appendix C.5. Proposition 3 demonstrates that the convergence rate depends on the exponent δ in ψ(θ), where higher values of δ result in a faster convergence rate of f1(θ). However, excessively large δ can also lead to a slower convergence rate of f2(θ) and instabilities in training. To balance convergence rate and training stability, we explore various ε in ψ(θ) in both phases with extensive empirical studies. The results can be found in Section 5.4. 5 Experiments 5.1 Experimental Settings We evaluate our proposed method on three mainstream I2I generative models, i.e., Masked Autoen- coder (MAE) [27], Vector Quantized Generative Adversarial Networks (VQ-GAN) [37], and diffusion probabilistic models [51]. Datasets: Following [36], we conduct experiments on the following two large-scale datasets: i) ImageNet-1K [15], from which we randomly select 200 classes, designating 100 of these as the forget set and the remaining 100 as the retain set. Each class contains 150 images, with 100 allocated for training and the remaining for validation; and ii) Places-365 [73], from which we randomly select 100 classes, designating 50 of these as the forget set and the remaining 50 as the retain set. Each class contains 5500 images, with 5000 allocated for training and the remaining 500 for validation. Baselines: We first report the performance of the original model (i.e., before unlearning) as a reference. Following [36], we set the following baselines: i) Max Loss [65, 20], which maximizes the training loss on the forget set; ii) Retain Label [33], which minimizes training loss by setting the true values of the retain samples as those of the forget set; iii) Noisy Label [25, 20], which minimizes the training loss by introducing Gaussian noise to the ground truth images of the forget set; and iv) Composite Loss [36], the State-Of-The-Art (SOTA) method, which builds upon Noisy Label by calculating the loss on the retain set and obtaining their weighted sum, thereby minimizing this weighted training loss. Evaluation metrics. We adopt three different types of metrics to comprehensively compare our method with other baselines: i) Inception Score (IS) of the generated images [53]; ii) the Frechét Inception Distance (FID) between the generated images and the ground truth images [28]; and iii) the cosine similarity between the CLIP embeddings of the 7 Table 1: Results of center cropping 50% of the images. ‘F’ and ‘R’ stand for the forget set and retain set, respectively. Here, \"Ours\" refers to the boundary points of unlearning obtained in Phase I, that is, the solution with the highest degree of unlearning completeness. The best results are highlighted in bold, and secondary results are highlighted with underline. MAE VQ-GAN Diffusion Models IS FID CLIP IS FID CLIP IS FID CLIP F ↓ R ↑ F ↑ R ↓ F ↓ R ↑ F ↓ R ↑ F ↑ R ↓ F ↓ R ↑ F ↓ R ↑ F ↑ R ↓ F ↓ R ↑ Original 21.59 21.83 16.28 14.87 0.88 0.88 23.74 24.06 21.80 18.17 0.78 0.85 16.90 19.65 82.12 81.51 0.89 0.91 Max Loss 15.42 16.55 129.54 87.13 0.72 0.72 19.20 21.23 23.52 43.88 0.77 0.75 17.27 18.10 95.93 108.70 0.83 0.79 Retain Label 20.74 14.14 90.62 103.72 0.71 0.73 14.44 19.24 106.01 46.25 0.47 0.75 17.02 19.08 86.10 89.18 0.87 0.83 Noisy Label 15.38 17.97 135.47 63.89 0.71 0.77 15.95 20.63 93.55 47.03 0.49 0.74 17.15 18.36 125.99 121.55 0.72 0.76 Composite Loss 13.96 15.71 149.78 74.14 0.70 0.72 14.34 21.60 103.17 37.92 0.48 0.77 14.33 17.80 149.22 98.82 0.64 0.80 Ours 12.33 17.47 154.60 68.453 0.69 0.75 13.23 22.55 139.21 26.39 0.46 0.82 11.84 18.47 165.05 95.42 0.55 0.81 Forget Set Retain Set Ground Truth Input Original Model Max Loss Retain Label Noisy Label Composite Loss Ours Figure 3: Generated images of cropping 50% at the center of the image on VQ-GAN. From left to right, the images generated by baselines are presented. Our method results in the highest degree of unlearning completeness while maintaining a minimal reduction in model utility. generated images and the ground truth images [47]. IS evaluates the quality of the generated images independently, while the FID further measures the similarity between the generated and ground truth images. On the other hand, the distance of CLIP embeddings assesses whether the generated images still capture similar semantics. 5.2 Unlearning Performance We test our method on image extension, inpainting, and reconstruction tasks. We report the results for center uncropping (i.e., inpainting) in Tabel 1, and the others in Appendix H.1. Baseline comparison: As shown in Table 1, compared to the original model, our method retains almost the same performance on the retain set or only exhibits minor degradation. Meanwhile, there is a significant reduction in the three metrics on the forget set. In contrast, these baselines generally cannot perform well simultaneously on both the forget set and the retain set. For instance, in MAE, Composite Loss has the least performance degradation on the retain set, but its performance on the forget set is also the worst. We also observe similar findings for Max Loss in VQ-GAN. Furthermore, we provide some examples of generated images in Figure 3, and more images in Appendix F. T-SNE analysis: Following [36], we conduct a T-SNE analysis [62] to further analyze our method’s effectiveness. Using our unlearned model, we generate 50 images for both the retain set and the forget set. We then calculate the CLIP embedding vectors for these images and their corresponding ground truth images. As illustrated in Figure 4, after unlearning, the embeddings of retain set are close to that of the ground truth images, while most of the generated images on the forget set diverge significantly from the ground truth one. Unlearning robustness: We validate the performance of our controllable unlearning framework in different image generation tasks by changing the cropping patterns. The results indicate that our framework is robust to various image generation tasks and generally outperforms baselines, with detailed results provided in Appendix H.1. Moreover, we examine the unlearning effects of our controllable unlearning framework under different crop ratios. The results in Appendix H.3 demonstrate that our framework is robust to different crop ratios. Furthermore, we find that the visual effects of unlearning control are more prominent with larger crop ratios. Summary: These results validate the effectiveness of our proposed method, which is universally applicable to mainstream I2I generative models as well as a variety of image generation tasks, consistently achieving favorable outcomes across all these tasks. 8 Before Unlearning: Forget Set Before Unlearning: Retain Set Unlearning: Forget Set× Unlearning: Retain Set× (c) Diffusion Model(b) VQ-GAN(a) MAE Figure 4: T-SNE analysis between images generated by our method and ground truth images. Table 2: Results of center cropping 50% of the images under different unlearning completeness. “Highest” and “Lowest” respectively represent the two boundary points of unlearning identified in Phase I. ε is a coefficient used to control the unlearning completeness in Phase II. MAE VQ-GAN Diffusion Models IS FID CLIP IS FID CLIP IS FID CLIP F ↓ R ↑ F ↑ R ↓ F ↓ R ↑ F ↓ R ↑ F ↑ R ↓ F ↓ R ↑ F ↓ R ↑ F ↑ R ↓ F ↓ R ↑ Original 21.59 21.83 16.28 14.87 0.88 0.88 23.74 24.06 21.80 18.17 0.78 0.85 16.90 19.65 82.12 81.51 0.89 0.91 Highest 12.33 17.47 154.60 68.453 0.69 0.75 13.23 22.55 139.21 26.39 0.46 0.82 11.84 18.47 165.05 95.42 0.55 0.81 ε-25% 17.93 20.55 85.36 59.09 0.74 0.77 14.14 22.65 130.71 24.57 0.46 0.82 15.12 19.27 137.95 84.21 0.60 0.81 ε-50% 19.47 21.42 57.81 50.99 0.77 0.79 14.60 22.25 123.32 22.65 0.47 0.83 15.92 18.70 118.76 71.43 0.66 0.83 ε-75% 20.68 22.87 42.51 31.80 0.80 0.82 15.20 22.53 116.59 20.63 0.47 0.84 16.33 19.53 104.21 63.62 0.73 0.83 Lowest 21.23 22.92 31.28 25.83 0.82 0.84 15.77 22.75 109.28 20.26 0.48 0.84 16.36 20.78 90.03 52.96 0.77 0.84 5.3 Controllable Unlearning We also evaluate the controllability of our method which provides a set of solutions for varied user expectations. First, we obtain two boundary points of unlearning, thereby establishing the valid range of values for ε. We linearly increase the value of ε within this range, adding 25% of the range interval each time, to obtain optimum solutions corresponding to different ε values. We provide some generated images corresponding to these solutions in Figure 1. Due to the space limit, please refer to Appendix G for more examples. For results of more fine-grained control (i.e., smaller increments of the linear increase of ε), please refer to Appendix H.2. We verify the unlearned models at different ε values, and report results in Table 2. As ε increases, we observe a trade-off: the unlearning completeness decreases, while the generated images’ performance on the forget set progressively improves, and, simultaneously, the performance on the retain set also improves. This observation clearly demonstrates the controllability of our proposed method, which can cater to varied user expectations. Please refer to Appendix I for additional results of the generated images and T-SNE analysis, which corroborates the above numerical results. 5.4 Unlearning Efficiency To enhance the efficiency of our controllable unlearning framework, we modify the selections of control function ψ(θ) during various phases. Specifically, we empirically examine the convergence under these conditions to assess the framework’s unlearning performance of efficiency. In Phase I, with the control function satisfying ψ(θ) = α∥∇f1(θ)∥ δ, we manipulate the value of the exponent δ to change the control function. Additionally, we verify the changes in the convergence rates of f1(θ) and f2(θ) under four different δ values across three models, with results shown in Appendix J. It is evident that f1(θ) and f2(θ) achieve an optimal balance in convergence rates when δ = 2, and the overall rate of convergence is fastest. In Phase II, where the control function satisfies ψ(θ) = β(f1(θ) − ε) δ, we test the changes in the convergence rates of f1(θ) and f2(θ) for two different δ values on three models. To stabilize the optimization process, we scale the form of the control function (i.e., ψ(θ) = β(f1(θ) − ε)δ∥∇f1(θ)∥ 2), selecting two different δ values, with results presented in Appendix J. It can be observed that at δ = 1 the overall rate of convergence was optimized. 9 6 Conclusion In this paper, we propose a controllable unlearning framework for I2I generative models to overcome the limitation of the existing method’s incapability to fulfill varied user expectations. Our approach allows for a controllable trade-off between unlearning completeness and model utility by introducing a control coefficient ε to control the degrees of unlearning completeness. We reformulate unlearning as a ε-constrained optimization problem and solve it with a gradient-based method to find two boundary points that guide the valid range for ε. Within this range, every chosen value of ε will lead to a Pareto optimal solution, addressing the existing method’s issue of lacking theoretical guarantee. Extensive experiments on two large datasets (i.e., ImageNet-1K and Places-365) across three mainstream I2I models (i.e., MAE, VQ-GAN, diffusion model) demonstrate significant advantages of our method over the SOTA methods with higher unlearning efficiency, and a controllable balance between the unlearning completeness and model utility. References [1] Guillaume Alain and Yoshua Bengio. What regularized auto-encoders learn from the data-generating distribution. The Journal of Machine Learning Research, 15(1):3563–3593, 2014. [2] Martin Arjovsky, Soumith Chintala, and Léon Bottou. Wasserstein generative adversarial networks. In International conference on machine learning, pages 214–223. PMLR, 2017. [3] Samyadeep Basu, Philip Pope, and Soheil Feizi. Influence functions in deep learning are fragile. In International Conference on Learning Representations (ICLR), 2021. [4] Joseph-Frédéric Bonnans, Jean Charles Gilbert, Claude Lemaréchal, and Claudia A Sagastizábal. Numerical optimization: theoretical and practical aspects. Springer Science & Business Media, 2006. [5] Lucas Bourtoule, Varun Chandrasekaran, Christopher A Choquette-Choo, Hengrui Jia, Adelin Travers, Baiwu Zhang, David Lie, and Nicolas Papernot. Machine unlearning. In 2021 IEEE Symposium on Security and Privacy (SP), pages 141–159. IEEE, 2021. [6] Stephen Boyd and Lieven Vandenberghe. Convex optimization. Cambridge university press, 2004. [7] Andrew Brock, Jeff Donahue, and Karen Simonyan. Large scale gan training for high fidelity natural image synthesis. In International Conference on Learning Representations (ICLR), 2019. [8] Nicolas Carlini, Jamie Hayes, Milad Nasr, Matthew Jagielski, Vikash Sehwag, Florian Tramer, Borja Balle, Daphne Ippolito, and Eric Wallace. Extracting training data from diffusion models. In 32nd USENIX Security Symposium (USENIX Security 23), pages 5253–5270, 2023. [9] Huiwen Chang, Han Zhang, Lu Jiang, Ce Liu, and William T Freeman. Maskgit: Masked generative image transformer. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 11315–11325, 2022. [10] Vira Chankong and Yacov Y Haimes. On the characterization of noninferior solutions of the vector optimization problem. Automatica, 18(6):697–707, 1982. [11] Chong Chen, Fei Sun, Min Zhang, and Bolin Ding. Recommendation unlearning. In Proceedings of the ACM Web Conference 2022, pages 2768–2777, 2022. [12] Lisha Chen, Heshan Fernando, Yiming Ying, and Tianyi Chen. Three-way trade-off in multi-objective learning: Optimization, generalization and conflict-avoidance. Advances in Neural Information Processing Systems, 36, 2024. [13] T.M. Cover and J.A. Thomas. Elements of Information Theory. Number 12. Wiley, 2012. [14] Stephen Dempe, Nguyen Dinh, and Joydeep Dutta. Optimality conditions for a simple convex bilevel programming problem. Variational Analysis and Generalized Differentiation in Optimization and Control: In Honor of Boris S. Mordukhovich, pages 149–161, 2010. [15] Jia Deng, Wei Dong, Richard Socher, Li-Jia Li, Kai Li, and Li Fei-Fei. Imagenet: A large-scale hierarchical image database. In 2009 IEEE conference on computer vision and pattern recognition (CVPR), pages 248–255. Ieee, 2009. [16] Prafulla Dhariwal and Alexander Nichol. Diffusion models beat gans on image synthesis. Advances in neural information processing systems, 34:8780–8794, 2021. [17] Alexey Dosovitskiy, Lucas Beyer, Alexander Kolesnikov, Dirk Weissenborn, Xiaohua Zhai, Thomas Unterthiner, Mostafa Dehghani, Matthias Minderer, Georg Heigold, Sylvain Gelly, et al. An image is worth 16x16 words: Transformers for image recognition at scale. In International Conference on Learning Representations (ICLR), 2021. 10 [18] Mohamed Elasri, Omar Elharrouss, Somaya Al-Maadeed, and Hamid Tairi. Image generation: A review. Neural Processing Letters, 54(5):4609–4646, 2022. [19] Patrick Esser, Robin Rombach, and Bjorn Ommer. Taming transformers for high-resolution image synthesis. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition (CVPR), pages 12873–12883, 2021. [20] Rohit Gandikota, Joanna Materzynska, Jaden Fiotto-Kaufman, and David Bau. Erasing concepts from diffusion models. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 2426–2436, 2023. [21] Philip E Gill and Elizabeth Wong. Sequential quadratic programming methods. In Mixed integer nonlinear programming, pages 147–224. Springer, 2011. [22] Aditya Golatkar, Alessandro Achille, and Stefano Soatto. Eternal sunshine of the spotless net: Selective forgetting in deep networks. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 9304–9312, 2020. [23] Chengyue Gong, Xingchao Liu, and Qiang Liu. Automatic and harmless regularization with constrained and lexicographic optimization: A dynamic barrier approach. Advances in Neural Information Processing Systems, 34:29630–29642, 2021. [24] Ian Goodfellow, Jean Pouget-Abadie, Mehdi Mirza, Bing Xu, David Warde-Farley, Sherjil Ozair, Aaron Courville, and Yoshua Bengio. Generative adversarial nets. Advances in neural information processing systems, 27, 2014. [25] Laura Graves, Vineel Nagisetty, and Vijay Ganesh. Amnesiac machine learning. In Proceedings of the AAAI Conference on Artificial Intelligence, volume 35, pages 11516–11524, 2021. [26] Ishaan Gulrajani, Faruk Ahmed, Martin Arjovsky, Vincent Dumoulin, and Aaron C Courville. Improved training of wasserstein gans. Advances in neural information processing systems, 30, 2017. [27] Kaiming He, Xinlei Chen, Saining Xie, Yanghao Li, Piotr Dollár, and Ross Girshick. Masked autoencoders are scalable vision learners. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition (CVPR), pages 16000–16009, 2022. [28] Martin Heusel, Hubert Ramsauer, Thomas Unterthiner, Bernhard Nessler, and Sepp Hochreiter. Gans trained by a two time-scale update rule converge to a local nash equilibrium. Advances in neural information processing systems, 30, 2017. [29] Jonathan Ho, Ajay Jain, and Pieter Abbeel. Denoising diffusion probabilistic models. Advances in neural information processing systems, 33:6840–6851, 2020. [30] Robert Janin. Directional derivative of the marginal function in nonlinear programming. Springer, 1984. [31] Il Yong Kim and Oliver L De Weck. Adaptive weighted-sum method for bi-objective optimization: Pareto front generation. Structural and multidisciplinary optimization, 29:149–158, 2005. [32] Diederik P Kingma, Max Welling, et al. An introduction to variational autoencoders. Foundations and Trends® in Machine Learning, 12(4):307–392, 2019. [33] Zhifeng Kong and Kamalika Chaudhuri. Data redaction from conditional generative models. arXiv preprint arXiv:2305.11351, 2023. [34] Aditya Kuppa, Lamine Aouad, and Nhien-An Le-Khac. Towards improving privacy of synthetic datasets. In Annual Privacy Forum, pages 106–119. Springer, 2021. [35] Meghdad Kurmanji, Peter Triantafillou, Jamie Hayes, and Eleni Triantafillou. Towards unbounded machine unlearning. Advances in Neural Information Processing Systems, 36, 2024. [36] Guihong Li, Hsiang Hsu, Radu Marculescu, et al. Machine unlearning for image-to-image generative models. In International Conference on Learning Representations (ICLR), 2024. [37] Tianhong Li, Huiwen Chang, Shlok Mishra, Han Zhang, Dina Katabi, and Dilip Krishnan. Mage: Masked generative encoder to unify representation learning and image synthesis. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR), pages 2142–2152, 2023. [38] Yuyuan Li, Chaochao Chen, Yizhao Zhang, Weiming Liu, Lingjuan Lyu, Xiaolin Zheng, Dan Meng, and Jun Wang. Ultrare: Enhancing receraser for recommendation unlearning via error decomposition. Advances in Neural Information Processing Systems, 36, 2024. [39] Yuyuan Li, Chaochao Chen, Xiaolin Zheng, Junlin Liu, and Jun Wang. Making recommender systems forget: Learning and unlearning for erasable recommendation. Knowledge-Based Systems, 283:111124, 2024. [40] Yuyuan Li, Chaochao Chen, Xiaolin Zheng, Yizhao Zhang, Biao Gong, Jun Wang, and Linxun Chen. Selective and collaborative influence function for efficient recommendation unlearning. Expert Systems with Applications, 234:121025, 2023. 11 [41] Xi Lin, Hui-Ling Zhen, Zhenhua Li, Qing-Fu Zhang, and Sam Kwong. Pareto multi-task learning. Advances in neural information processing systems, 32, 2019. [42] Kaisa Miettinen. Nonlinear multiobjective optimization, volume 12. Springer Science & Business Media, 1999. [43] Thanh Tam Nguyen, Thanh Trung Huynh, Phi Le Nguyen, Alan Wee-Chung Liew, Hongzhi Yin, and Quoc Viet Hung Nguyen. A survey of machine unlearning. arXiv preprint arXiv:2209.02299, 2022. [44] Jorge Nocedal and Stephen J Wright. Numerical optimization. Springer. [45] OpenAI. GPT-4 technical report. CoRR, abs/2303.08774, 2023. [46] Panos M Pardalos, Antanas Žilinskas, Julius Žilinskas, et al. Non-convex multi-objective optimization. Springer, 2017. [47] Alec Radford, Jong Wook Kim, Chris Hallacy, Aditya Ramesh, Gabriel Goh, Sandhini Agarwal, Girish Sastry, Amanda Askell, Pamela Mishkin, Jack Clark, et al. Learning transferable visual models from natural language supervision. In International conference on machine learning, pages 8748–8763. PMLR, 2021. [48] James Renegar. A mathematical view of interior-point methods in convex optimization. SIAM, 2001. [49] Stephen M Robinson. Perturbed kuhn-tucker points and rates of convergence for a class of nonlinear- programming algorithms. Mathematical programming, 7:1–16, 1974. [50] Robin Rombach, Andreas Blattmann, Dominik Lorenz, Patrick Esser, and Björn Ommer. High-resolution image synthesis with latent diffusion models. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pages 10684–10695, 2022. [51] Chitwan Saharia, William Chan, Huiwen Chang, Chris Lee, Jonathan Ho, Tim Salimans, David Fleet, and Mohammad Norouzi. Palette: Image-to-image diffusion models. In ACM SIGGRAPH 2022 conference proceedings, pages 1–10, 2022. [52] Chitwan Saharia, William Chan, Saurabh Saxena, Lala Li, Jay Whang, Emily L Denton, Kamyar Ghasemipour, Raphael Gontijo Lopes, Burcu Karagol Ayan, Tim Salimans, et al. Photorealistic text-to- image diffusion models with deep language understanding. Advances in neural information processing systems, 35:36479–36494, 2022. [53] Tim Salimans, Ian Goodfellow, Wojciech Zaremba, Vicki Cheung, Alec Radford, and Xi Chen. Improved techniques for training gans. Advances in neural information processing systems, 29, 2016. [54] Tim Salimans and Jonathan Ho. Progressive distillation for fast sampling of diffusion models. In International Conference on Learning Representations (ICLR), 2022. [55] Katja Schwarz, Yiyi Liao, and Andreas Geiger. On the frequency bias of generative models. Advances in Neural Information Processing Systems, 34:18126–18136, 2021. [56] Ayush Sekhari, Jayadev Acharya, Gautam Kamath, and Ananda Theertha Suresh. Remember what you want to forget: Algorithms for machine unlearning. Advances in Neural Information Processing Systems, 34:18075–18086, 2021. [57] Yang Song and Stefano Ermon. Improved techniques for training score-based generative models. Advances in neural information processing systems, 33:12438–12448, 2020. [58] Gilbert W Stewart. On the perturbation of pseudo-inverses, projections and linear least squares problems. SIAM review, 19(4):634–662, 1977. [59] Piotr Teterwak, Aaron Sarna, Dilip Krishnan, Aaron Maschinot, David Belanger, Ce Liu, and William T Freeman. Boundless: Generative adversarial networks for image extension. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 10521–10530, 2019. [60] Kushal Tirumala, Aram Markosyan, Luke Zettlemoyer, and Armen Aghajanyan. Memorization without overfitting: Analyzing the training dynamics of large language models. Advances in Neural Information Processing Systems, 35:38274–38290, 2022. [61] Hugo Touvron, Louis Martin, Kevin Stone, Peter Albert, Amjad Almahairi, Yasmine Babaei, Nikolay Bashlykov, Soumya Batra, Prajjwal Bhargava, Shruti Bhosale, et al. Llama 2: Open foundation and fine-tuned chat models. arXiv preprint arXiv:2307.09288, 2023. [62] Laurens Van der Maaten and Geoffrey Hinton. Visualizing data using t-sne. Journal of machine learning research, 9(11), 2008. [63] Paul Voigt and Axel Von dem Bussche. The eu general data protection regulation (gdpr). A Practical Guide, 1st Ed., Cham: Springer International Publishing, 10(3152676):10–5555, 2017. [64] Bram Wallace, Akash Gokul, and Nikhil Naik. Edict: Exact diffusion inversion via coupled transformations. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 22532– 22541, 2023. 12 [65] Alexander Warnecke, Lukas Pirch, Christian Wressnegger, and Konrad Rieck. Machine unlearning of features and labels. In 30th Annual Network and Distributed System Security Symposium NDSS, 2023. [66] Weihao Xia, Yulun Zhang, Yujiu Yang, Jing-Hao Xue, Bolei Zhou, and Ming-Hsuan Yang. Gan inversion: A survey. IEEE transactions on pattern analysis and machine intelligence, 45(3):3121–3138, 2022. [67] Heng Xu, Tianqing Zhu, Lefeng Zhang, Wanlei Zhou, and Philip S. Yu. Machine unlearning: A survey. Association for Computing Machinery, 56:36, 2023. [68] Haonan Yan, Xiaoguang Li, Ziyao Guo, Hui Li, Fenghua Li, and Xiaodong Lin. Arcane: An efficient architecture for exact machine unlearning. In IJCAI, volume 6, page 19, 2022. [69] Ling Yang, Zhilong Zhang, Yang Song, Shenda Hong, Runsheng Xu, Yue Zhao, Wentao Zhang, Bin Cui, and Ming-Hsuan Yang. Diffusion models: A comprehensive survey of methods and applications. ACM Computing Surveys, 56(4):1–39, 2023. [70] Özgür Yeniay. Penalty function methods for constrained optimization with genetic algorithms. Mathematical and computational Applications, 10(1):45–56, 2005. [71] Lu Yu, Joost van de Weijer, et al. Deepi2i: Enabling deep hierarchical image-to-image translation by transferring from gans. Advances in Neural Information Processing Systems, 33:11803–11815, 2020. [72] Xulong Zhang, Jianzong Wang, Ning Cheng, Yifu Sun, Chuanyao Zhang, and Jing Xiao. Machine unlearning methodology based on stochastic teacher network. In International Conference on Advanced Data Mining and Applications, pages 250–261. Springer, 2023. [73] Bolei Zhou, Agata Lapedriza, Aditya Khosla, Aude Oliva, and Antonio Torralba. Places: A 10 million image database for scene recognition. IEEE transactions on pattern analysis and machine intelligence, 40(6):1452–1464, 2017. [74] Jun-Yan Zhu, Taesung Park, Phillip Isola, and Alexei A Efros. Unpaired image-to-image translation using cycle-consistent adversarial networks. In Proceedings of the IEEE international conference on computer vision, pages 2223–2232, 2017. References [1] Guillaume Alain and Yoshua Bengio. What regularized auto-encoders learn from the data-generating distribution. The Journal of Machine Learning Research, 15(1):3563–3593, 2014. [2] Martin Arjovsky, Soumith Chintala, and Léon Bottou. Wasserstein generative adversarial networks. In International conference on machine learning, pages 214–223. PMLR, 2017. [3] Samyadeep Basu, Philip Pope, and Soheil Feizi. Influence functions in deep learning are fragile. In International Conference on Learning Representations (ICLR), 2021. [4] Joseph-Frédéric Bonnans, Jean Charles Gilbert, Claude Lemaréchal, and Claudia A Sagastizábal. Numerical optimization: theoretical and practical aspects. Springer Science & Business Media, 2006. [5] Lucas Bourtoule, Varun Chandrasekaran, Christopher A Choquette-Choo, Hengrui Jia, Adelin Travers, Baiwu Zhang, David Lie, and Nicolas Papernot. Machine unlearning. In 2021 IEEE Symposium on Security and Privacy (SP), pages 141–159. IEEE, 2021. [6] Stephen Boyd and Lieven Vandenberghe. Convex optimization. Cambridge university press, 2004. [7] Andrew Brock, Jeff Donahue, and Karen Simonyan. Large scale gan training for high fidelity natural image synthesis. In International Conference on Learning Representations (ICLR), 2019. [8] Nicolas Carlini, Jamie Hayes, Milad Nasr, Matthew Jagielski, Vikash Sehwag, Florian Tramer, Borja Balle, Daphne Ippolito, and Eric Wallace. Extracting training data from diffusion models. In 32nd USENIX Security Symposium (USENIX Security 23), pages 5253–5270, 2023. [9] Huiwen Chang, Han Zhang, Lu Jiang, Ce Liu, and William T Freeman. Maskgit: Masked generative image transformer. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 11315–11325, 2022. [10] Vira Chankong and Yacov Y Haimes. On the characterization of noninferior solutions of the vector optimization problem. Automatica, 18(6):697–707, 1982. [11] Chong Chen, Fei Sun, Min Zhang, and Bolin Ding. Recommendation unlearning. In Proceedings of the ACM Web Conference 2022, pages 2768–2777, 2022. [12] Lisha Chen, Heshan Fernando, Yiming Ying, and Tianyi Chen. Three-way trade-off in multi-objective learning: Optimization, generalization and conflict-avoidance. Advances in Neural Information Processing Systems, 36, 2024. [13] T.M. Cover and J.A. Thomas. Elements of Information Theory. Number 12. Wiley, 2012. 13 [14] Stephen Dempe, Nguyen Dinh, and Joydeep Dutta. Optimality conditions for a simple convex bilevel programming problem. Variational Analysis and Generalized Differentiation in Optimization and Control: In Honor of Boris S. Mordukhovich, pages 149–161, 2010. [15] Jia Deng, Wei Dong, Richard Socher, Li-Jia Li, Kai Li, and Li Fei-Fei. Imagenet: A large-scale hierarchical image database. In 2009 IEEE conference on computer vision and pattern recognition (CVPR), pages 248–255. Ieee, 2009. [16] Prafulla Dhariwal and Alexander Nichol. Diffusion models beat gans on image synthesis. Advances in neural information processing systems, 34:8780–8794, 2021. [17] Alexey Dosovitskiy, Lucas Beyer, Alexander Kolesnikov, Dirk Weissenborn, Xiaohua Zhai, Thomas Unterthiner, Mostafa Dehghani, Matthias Minderer, Georg Heigold, Sylvain Gelly, et al. An image is worth 16x16 words: Transformers for image recognition at scale. In International Conference on Learning Representations (ICLR), 2021. [18] Mohamed Elasri, Omar Elharrouss, Somaya Al-Maadeed, and Hamid Tairi. Image generation: A review. Neural Processing Letters, 54(5):4609–4646, 2022. [19] Patrick Esser, Robin Rombach, and Bjorn Ommer. Taming transformers for high-resolution image synthesis. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition (CVPR), pages 12873–12883, 2021. [20] Rohit Gandikota, Joanna Materzynska, Jaden Fiotto-Kaufman, and David Bau. Erasing concepts from diffusion models. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 2426–2436, 2023. [21] Philip E Gill and Elizabeth Wong. Sequential quadratic programming methods. In Mixed integer nonlinear programming, pages 147–224. Springer, 2011. [22] Aditya Golatkar, Alessandro Achille, and Stefano Soatto. Eternal sunshine of the spotless net: Selective forgetting in deep networks. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 9304–9312, 2020. [23] Chengyue Gong, Xingchao Liu, and Qiang Liu. Automatic and harmless regularization with constrained and lexicographic optimization: A dynamic barrier approach. Advances in Neural Information Processing Systems, 34:29630–29642, 2021. [24] Ian Goodfellow, Jean Pouget-Abadie, Mehdi Mirza, Bing Xu, David Warde-Farley, Sherjil Ozair, Aaron Courville, and Yoshua Bengio. Generative adversarial nets. Advances in neural information processing systems, 27, 2014. [25] Laura Graves, Vineel Nagisetty, and Vijay Ganesh. Amnesiac machine learning. In Proceedings of the AAAI Conference on Artificial Intelligence, volume 35, pages 11516–11524, 2021. [26] Ishaan Gulrajani, Faruk Ahmed, Martin Arjovsky, Vincent Dumoulin, and Aaron C Courville. Improved training of wasserstein gans. Advances in neural information processing systems, 30, 2017. [27] Kaiming He, Xinlei Chen, Saining Xie, Yanghao Li, Piotr Dollár, and Ross Girshick. Masked autoencoders are scalable vision learners. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition (CVPR), pages 16000–16009, 2022. [28] Martin Heusel, Hubert Ramsauer, Thomas Unterthiner, Bernhard Nessler, and Sepp Hochreiter. Gans trained by a two time-scale update rule converge to a local nash equilibrium. Advances in neural information processing systems, 30, 2017. [29] Jonathan Ho, Ajay Jain, and Pieter Abbeel. Denoising diffusion probabilistic models. Advances in neural information processing systems, 33:6840–6851, 2020. [30] Robert Janin. Directional derivative of the marginal function in nonlinear programming. Springer, 1984. [31] Il Yong Kim and Oliver L De Weck. Adaptive weighted-sum method for bi-objective optimization: Pareto front generation. Structural and multidisciplinary optimization, 29:149–158, 2005. [32] Diederik P Kingma, Max Welling, et al. An introduction to variational autoencoders. Foundations and Trends® in Machine Learning, 12(4):307–392, 2019. [33] Zhifeng Kong and Kamalika Chaudhuri. Data redaction from conditional generative models. arXiv preprint arXiv:2305.11351, 2023. [34] Aditya Kuppa, Lamine Aouad, and Nhien-An Le-Khac. Towards improving privacy of synthetic datasets. In Annual Privacy Forum, pages 106–119. Springer, 2021. [35] Meghdad Kurmanji, Peter Triantafillou, Jamie Hayes, and Eleni Triantafillou. Towards unbounded machine unlearning. Advances in Neural Information Processing Systems, 36, 2024. [36] Guihong Li, Hsiang Hsu, Radu Marculescu, et al. Machine unlearning for image-to-image generative models. In International Conference on Learning Representations (ICLR), 2024. 14 [37] Tianhong Li, Huiwen Chang, Shlok Mishra, Han Zhang, Dina Katabi, and Dilip Krishnan. Mage: Masked generative encoder to unify representation learning and image synthesis. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR), pages 2142–2152, 2023. [38] Yuyuan Li, Chaochao Chen, Yizhao Zhang, Weiming Liu, Lingjuan Lyu, Xiaolin Zheng, Dan Meng, and Jun Wang. Ultrare: Enhancing receraser for recommendation unlearning via error decomposition. Advances in Neural Information Processing Systems, 36, 2024. [39] Yuyuan Li, Chaochao Chen, Xiaolin Zheng, Junlin Liu, and Jun Wang. Making recommender systems forget: Learning and unlearning for erasable recommendation. Knowledge-Based Systems, 283:111124, 2024. [40] Yuyuan Li, Chaochao Chen, Xiaolin Zheng, Yizhao Zhang, Biao Gong, Jun Wang, and Linxun Chen. Selective and collaborative influence function for efficient recommendation unlearning. Expert Systems with Applications, 234:121025, 2023. [41] Xi Lin, Hui-Ling Zhen, Zhenhua Li, Qing-Fu Zhang, and Sam Kwong. Pareto multi-task learning. Advances in neural information processing systems, 32, 2019. [42] Kaisa Miettinen. Nonlinear multiobjective optimization, volume 12. Springer Science & Business Media, 1999. [43] Thanh Tam Nguyen, Thanh Trung Huynh, Phi Le Nguyen, Alan Wee-Chung Liew, Hongzhi Yin, and Quoc Viet Hung Nguyen. A survey of machine unlearning. arXiv preprint arXiv:2209.02299, 2022. [44] Jorge Nocedal and Stephen J Wright. Numerical optimization. Springer. [45] OpenAI. GPT-4 technical report. CoRR, abs/2303.08774, 2023. [46] Panos M Pardalos, Antanas Žilinskas, Julius Žilinskas, et al. Non-convex multi-objective optimization. Springer, 2017. [47] Alec Radford, Jong Wook Kim, Chris Hallacy, Aditya Ramesh, Gabriel Goh, Sandhini Agarwal, Girish Sastry, Amanda Askell, Pamela Mishkin, Jack Clark, et al. Learning transferable visual models from natural language supervision. In International conference on machine learning, pages 8748–8763. PMLR, 2021. [48] James Renegar. A mathematical view of interior-point methods in convex optimization. SIAM, 2001. [49] Stephen M Robinson. Perturbed kuhn-tucker points and rates of convergence for a class of nonlinear- programming algorithms. Mathematical programming, 7:1–16, 1974. [50] Robin Rombach, Andreas Blattmann, Dominik Lorenz, Patrick Esser, and Björn Ommer. High-resolution image synthesis with latent diffusion models. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition, pages 10684–10695, 2022. [51] Chitwan Saharia, William Chan, Huiwen Chang, Chris Lee, Jonathan Ho, Tim Salimans, David Fleet, and Mohammad Norouzi. Palette: Image-to-image diffusion models. In ACM SIGGRAPH 2022 conference proceedings, pages 1–10, 2022. [52] Chitwan Saharia, William Chan, Saurabh Saxena, Lala Li, Jay Whang, Emily L Denton, Kamyar Ghasemipour, Raphael Gontijo Lopes, Burcu Karagol Ayan, Tim Salimans, et al. Photorealistic text-to- image diffusion models with deep language understanding. Advances in neural information processing systems, 35:36479–36494, 2022. [53] Tim Salimans, Ian Goodfellow, Wojciech Zaremba, Vicki Cheung, Alec Radford, and Xi Chen. Improved techniques for training gans. Advances in neural information processing systems, 29, 2016. [54] Tim Salimans and Jonathan Ho. Progressive distillation for fast sampling of diffusion models. In International Conference on Learning Representations (ICLR), 2022. [55] Katja Schwarz, Yiyi Liao, and Andreas Geiger. On the frequency bias of generative models. Advances in Neural Information Processing Systems, 34:18126–18136, 2021. [56] Ayush Sekhari, Jayadev Acharya, Gautam Kamath, and Ananda Theertha Suresh. Remember what you want to forget: Algorithms for machine unlearning. Advances in Neural Information Processing Systems, 34:18075–18086, 2021. [57] Yang Song and Stefano Ermon. Improved techniques for training score-based generative models. Advances in neural information processing systems, 33:12438–12448, 2020. [58] Gilbert W Stewart. On the perturbation of pseudo-inverses, projections and linear least squares problems. SIAM review, 19(4):634–662, 1977. [59] Piotr Teterwak, Aaron Sarna, Dilip Krishnan, Aaron Maschinot, David Belanger, Ce Liu, and William T Freeman. Boundless: Generative adversarial networks for image extension. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pages 10521–10530, 2019. 15 [60] Kushal Tirumala, Aram Markosyan, Luke Zettlemoyer, and Armen Aghajanyan. Memorization without overfitting: Analyzing the training dynamics of large language models. Advances in Neural Information Processing Systems, 35:38274–38290, 2022. [61] Hugo Touvron, Louis Martin, Kevin Stone, Peter Albert, Amjad Almahairi, Yasmine Babaei, Nikolay Bashlykov, Soumya Batra, Prajjwal Bhargava, Shruti Bhosale, et al. Llama 2: Open foundation and fine-tuned chat models. arXiv preprint arXiv:2307.09288, 2023. [62] Laurens Van der Maaten and Geoffrey Hinton. Visualizing data using t-sne. Journal of machine learning research, 9(11), 2008. [63] Paul Voigt and Axel Von dem Bussche. The eu general data protection regulation (gdpr). A Practical Guide, 1st Ed., Cham: Springer International Publishing, 10(3152676):10–5555, 2017. [64] Bram Wallace, Akash Gokul, and Nikhil Naik. Edict: Exact diffusion inversion via coupled transformations. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition, pages 22532– 22541, 2023. [65] Alexander Warnecke, Lukas Pirch, Christian Wressnegger, and Konrad Rieck. Machine unlearning of features and labels. In 30th Annual Network and Distributed System Security Symposium NDSS, 2023. [66] Weihao Xia, Yulun Zhang, Yujiu Yang, Jing-Hao Xue, Bolei Zhou, and Ming-Hsuan Yang. Gan inversion: A survey. IEEE transactions on pattern analysis and machine intelligence, 45(3):3121–3138, 2022. [67] Heng Xu, Tianqing Zhu, Lefeng Zhang, Wanlei Zhou, and Philip S. Yu. Machine unlearning: A survey. Association for Computing Machinery, 56:36, 2023. [68] Haonan Yan, Xiaoguang Li, Ziyao Guo, Hui Li, Fenghua Li, and Xiaodong Lin. Arcane: An efficient architecture for exact machine unlearning. In IJCAI, volume 6, page 19, 2022. [69] Ling Yang, Zhilong Zhang, Yang Song, Shenda Hong, Runsheng Xu, Yue Zhao, Wentao Zhang, Bin Cui, and Ming-Hsuan Yang. Diffusion models: A comprehensive survey of methods and applications. ACM Computing Surveys, 56(4):1–39, 2023. [70] Özgür Yeniay. Penalty function methods for constrained optimization with genetic algorithms. Mathematical and computational Applications, 10(1):45–56, 2005. [71] Lu Yu, Joost van de Weijer, et al. Deepi2i: Enabling deep hierarchical image-to-image translation by transferring from gans. Advances in Neural Information Processing Systems, 33:11803–11815, 2020. [72] Xulong Zhang, Jianzong Wang, Ning Cheng, Yifu Sun, Chuanyao Zhang, and Jing Xiao. Machine unlearning methodology based on stochastic teacher network. In International Conference on Advanced Data Mining and Applications, pages 250–261. Springer, 2023. [73] Bolei Zhou, Agata Lapedriza, Aditya Khosla, Aude Oliva, and Antonio Torralba. Places: A 10 million image database for scene recognition. IEEE transactions on pattern analysis and machine intelligence, 40(6):1452–1464, 2017. [74] Jun-Yan Zhu, Taesung Park, Phillip Isola, and Alexei A Efros. Unpaired image-to-image translation using cycle-consistent adversarial networks. In Proceedings of the IEEE international conference on computer vision, pages 2223–2232, 2017. A Broader Impacts and Limitations The abundance of training data not only enhances the performance of generative models but also introduces issues with privacy, unfairness, and bias. Our proposed controllable unlearning framework offers a viable solution to these issues. Our proposed framework is not limited to unlearning in I2I generation models but can be easily extended to other types of generative models, including text-to-image and text-to-text models. However, the unlearning framework presented herein has certain limitations. Note that Propositions 1 and 2 in Section 4 assume the convexity of the objective function and the feasible set. This assumption is essential to guarantee that the yielded solutions are Pareto optimal. In cases where the objective function and the feasible set are non-convex, the solutions obtained from solving Eq. (6) can only be guaranteed to be weakly Pareto optimal [42] or Pareto stability [12]. B Algorithm Procedure of Controllable Unlearning Framework To address the ε-constrained optimization problem Eq. (6), we employ a gradient-based method. Specifically, the detailed algorithmic procedure of our controllable unlearning framework is as follows. 16 Algorithm 1 Gradient-based Optimization Method Require: Original model Iθ0, forget set Df , retain set Dr, control function ψ(θ), step size µ, covariance matrix Σ, numerical stability variable ϖ = 1e − 7. 1: Initial: Initialize t = 0, Iθt = Iθ0; 2: for t = 0 to T − 1 do 3: Sample {xf }, {xr} and {xn} from Df , Dr and N (0, ε) respectively, ensuring that |{xf }| = |{xr}| = |{xn}|; 4: Compute loss: 5: f1(θt) = ∥Iθt(T (Df )) − Iθ0 (T (xn))∥2 6: f2(θt) = ∥Iθt(T (Dr)) − Iθ0 (T (Dr))∥2 7: Compute gradient: ∇f1(θt), ∇f2(θt); 8: Compute the solution to the dual problem of Eq. (7): ηt = max ( ψ(θt)−∇f2(θt) ⊤∇f1(θt) ∥∇f1(θt)∥2+ϖ , 0); 9: Compute parameter update direction: gt = ∇f2(θt) + ηt∇f1(θt); 10: Update the parameter of the target model Iθt+1 : θt+1 ←− θt − µtgt; 11: end for 12: Return Unlearned model IθT ; C Theoretical Validation C.1 Proof of Equivalence Given the original problem min θ∈Rd f2(θ) s.t. f1(θ) ≤ ε, (10) which is a constrained nonlinear programming problem. To solve it, we formulate its Lagrangian equation: L(θ, λ) = f2(θ) + λ(f1(θ) − ε). (11) Further, we derive the KKT conditions for Eq.11: ∇θL(θ∗, λ∗) = ∇f2(θ∗) + λ∗∇[f1(θ∗) − ε] = 0 f1(θ∗) − ε ≤ 0 λ∗ ≥ 0 λ∗(f1(θ∗) − ε) = 0. (12) The standard Newton’s Method searches for the solution Lθ(θ, λ) = 0 by iterating the following equation: [ θt+1 λt+1 ] = [ θt λt ] − [ ∇2 θL ∇[f1(θt) − ε] ∇[f1(θt) − ε] T 0 ]−1 ︸ ︷︷ ︸ ∇2L−1 [ ∇θL(θt, λt) f1(θt) − ε ] ︸ ︷︷ ︸ ∇L , (13) where ∇2 θ denotes the Hessian matrix. However, the Newton step gt = (∇2 θL) −1∇θL cannot be calculated directly and we also have other optimal condition in Eq. 12 introduced by the inequality constraints. Instead, the basic sequential quadratic programming algorithm defines an appropriate search direction gt at an iterate (θt, λt), as a solution to the quadratic programming subproblem. Denoting by gt = (gθ t , gλ t ) the change in the variables at the current point (θt, λt), where (gθ t , gλ t ) solve the Newton–KKT system [44]: ∇θL(θt, λt)gθ t + ∇[f1(θt) − ε]gλ t = −∇θL(θt, λt) f1(θt) − ε + ∇[f1(θt) − ε]gθ t ≤ 0 λt + gλ t ≥ 0 (λt + gλ t )(f1(θ∗) − ε + ∇[f1(θt) − ε]gθ t ) = 0. (14) Denoting by λt+1 = λt + gλ t , we have ∇θL(θt, λt)gθ t + ∇[f1(θt) − ε]λt+1 = −∇f2(θt) f1(θt) − ε + ∇[f1(θt) − ε]gθ t ≤ 0 λt+1 ≥ 0 λt+1( f1(θ∗) − ε + ∇[f1(θt) − ε]gθ t ) = 0. (15) 17 It is easy to check that Eq. 15 is the optimality system of the following quadratic problem (QP) min g f2 (θt) + ∇f2 (θt)⊤ g + 1 2 g⊤∇2 θL (θt, λt) g f1(θt) − ε + ∇[f1(θt) − ε]g ≤ 0. (16) Setting gθ t = g, the KKT conditions for Eq. 16 are consistent with the constraints specified in Eq. 15. Further, according to Theorem 1, the optimal solution for Eq. 16, when approaching the optimal solution of the original Problem (i.e., Eq. 10), satisfies the KKT conditions of Eq. 10. Considering that the models discussed in this paper are all deep neural networks, based on previous studies [23], the Hessian matrix can be approximated as an identity matrix. Additionally, for consistency with the main text (i.e., θt+1 ←− θt − µtgt), setting g = −gt yields the following form: min gt ∇f2 (θt)⊤ ∇f2 (θt) − 2∇f2 (θt)⊤ gt + g⊤ t gt ∇f1(θt)gt ≥ f1(θt) − ε. (17) Theorem 1. Theorem of Robinson [49]. Suppose that θ∗ is a local solution of Eq. 10 at which the KKT conditions are satisfied for some λ∗. Suppose, too, that the linear independence constraint qualification (LICQ), the strict complementarity condition, and the second-order sufficient conditions hold at (θ∗, λ∗). Then if (θt, λt) is sufficiently close to (θ∗, λ∗), there is a local solution of the subproblem Eq. 16 whose active set At is the same as the active set A (θ∗) of the nonlinear program Eq. 10 at θ∗. C.2 Basic Components Before exploring the proofs of Propositions 1 and 2, it is essential to define some fundamental concepts and lemmas. This references some works [6, 46, 23] mentioned earlier; for the sake of readability, we will reiterate them here. Penalty Function. An alternative method to evaluate the optimality of Algorithm 1 involves the L1 penalty function given by: Pξ(θ) = f2(θ) + ξ[f1(θ) − ε]+, (18) where ξ > 0 is a scaling coefficient. The minima of Eq. (18) align with the solutions to Eq. (6) for sufficiently large values of ξ [44]. First-order KKT Condition and KKT Function. We revisit the first-order KKT condition [44] for the constrained optimization described in Eq. (9). Assume θ∗ is a local optimum with continuously differentiable f1(θ) and f2(θ), and ∥∇f1(θ∗)∥ ̸= 0. There exists a Lagrange multiplier ω∗ ∈ [0, +∞) such that: ∇f2(θ∗) + ω∗∇f1(θ∗) = 0, f1(θ∗) ≤ ε, ω∗(f1(θ∗) − ε) = 0. (19) This setup highlights the importance of ∥∇f1(θ∗)∥ ̸= 0 as a constraint qualification condition. Utilizing Algorithm 1 for Eq. (9), and for η ≥ 0, the KKT function [23] to verify the first-order KKT condition is defined as: Kτ (θt, ηt) = ∥∇f2(θt) + ηt∇f1(θt)∥ 2 + τ [ψ(θt)]+ + ηt[−ψ(θt)]+, (20) where τ > 0, and [x]+ = max(x, 0). It is clear that Kτ (θt, ηt) ≥ 0 for all θt ∈ Rd and ηt ≥ 0, achieving Kτ (θt, ηt) = 0 iff (θt, ηt) satisfies the first-order KKT condition. Second-order KKT Condition and KKT Function In the context of Algorithm 1 applied to Eq. (8), we expect that ∥∇f1(θt)∥ approaches zero, leading to ηt potentially diverging to infinity. This scenario indicates a violation of the first-order KKT condition, potentially interpreted as η∗ = +∞. While the first-order condition (Eq. (19)) is inadequate, the second-order KKT conditions involving the Hessian ∇ 2f1(θ) are applicable [14]. Consider the relaxed form of Eq. (8) as: min θ∈Rd f2(θ) s.t. ∇f1(θ) = 0. (21) If θ∗ is a local minimum of Eq. (8), it coincides with a local minimum of Eq. (21). Assuming f2(θ) and ∇f1(θ) are continuously differentiable, with the Hessian ∇ 2f1(θ) maintaining constant rank near θ∗ [30], the first-order KKT condition for Eq. (21) can be formulated. There exists a vector ω∗ ∈ Rd such that: ∇f2 (θ∗) + ∇ 2f1 (θ∗) ω∗ = 0. (22) This condition implies that ∇f2(θ∗) is orthogonal to the null space of ∇ 2f1(θ∗), defining the tangent space of the stationary manifold {θ : ∇f1(θ) = 0} for f1(θ). 18 For verifying local optimality under the constraints of Eq. (8) where ψ(θ) ≥ 0, the KKT function is proposed as: Kτ (θt, ηt) = ∥∇f2 (θt) + ηt∇f1 (θt)∥ 2 + τ ψ (θt) , (23) where ψ(θt) = 0 asserts that θt is stationary for f1(θ), and ∥∇f2(θt) + ηt∇f1(θt)∥ = 0 signifies local optimal- ity with respect to f2(θ), aligning with the KKT condition for the relaxed problem minθ{f2(θ) s.t. f1(θ) ≤ εt}, with εt = f1(θt). In the analysis of Algorithm 1, a fundamental theorem concerning the behavior of the penalty function Pξ(θ) and the KKT function Kτ (θ, η), given in Eqs. (20) and (23), is essential for understanding the algorithm’s convergence and feasibility characteristics. This lemma is stated as follows: Theorem 2. Theorem 3.2 of Gong et al. (2021) [23]. Assume Assumption 1 holds, for any ξ ≥ 0, we have d dt Pξ(θt) ≤ −Kξ−ηt (θt, ηt), ∀t ∈ [0, +∞). (24) This equation indicates that Pξ(θt) is non-increasing w.r.t. time t provided that Kξ−ηt (θt, ηt) ≥ 0. This condition is satisfied if ξ is sufficiently large such that ξ − ηt ≥ 0, or when the constraint is met, i.e., f1(θt) ≤ ε, ensuring [ψ(θt)]+ = 0. This lemma facilitates further deductions about the behavior of the algorithm under different settings of the parameter ξ. For instance, setting ξ → +∞ allows us to demonstrate that the constraint [f1(θt) − ε]+ is non-increasing w.r.t. time t. This implies that f1(θt) is decreasing w.r.t. time t outside the feasible region, and once θt enters the feasible region, it remains therein. Conversely, setting ξ = 0 reveals that f2(θt) monotonically decreases w.r.t. time t within the feasible set, progressing towards a KKT point. These observations are critical for understanding both the feasibility and optimality properties of Algorithm 1 under different operational scenarios. Proposition 4. Under Assumption 1, the following two propositions hold: 1. For any time t ∈ [0, +∞), mins∈[0,t][ψ(θs)]+ = O( 1 t ) holds. 2. If ψ(θ) ≥ 0 holds, then mins∈[0,t] ψ (θs) ≤ 1 t (f1 (θ0) − f ∗ 1 ) for any time t ∈ [0, +∞). Proof of Proposition 4-1. At each time point t ∈ [0, +∞), dividing both sides of Eq. (24) by ξ > 0 and taking ξ → +∞ gives d dt [f1 (θt) − ε]+ ≤ − [ψ (θt)]+ ≤ 0. Integrating this on time interval [0, t] gives min s∈[0,t] [ψ (θs)]+ ≤ 1 t ∫ t 0 [ψ (θs)]+ ds ≤ 1 t ( [f1 (θ0) − ε]+ − [f1 (θt) − ε]+) ≤ 1 t [f1 (θ0) − ε]+ . (25) min s∈[0,t] [ψ (θs)]+ ≤ 1 t ∫ t 0 [ψ (θs)]+ ds ≤ 1 t ( [f1 (θ0) − ε]+ − [f1 (θt) − ε]+) ≤ 1 t [f1 (θ0) − ε]+ . This implies that mins∈[0,t][ψ(θs)]+ = O( 1 t ). Proof of Proposition 4-2. Let f ∗ 1 = inf θ∈Rd f1(θ) and f ∗ 2 = inf θ∈Rd f2(θ). Since ψ(θ) ≥ 0, by substituting Eq. (23) into Eq. (24), we have for any ξ ≥ 0, d dt ( f2 (θt) + ξ [f1 (θt) − ε]+) ≤ −∥∇f2 (θt) + ηt∇f1 (θt)∥ 2 − (ξ − ηt) ψ (θt) , ∀t ∈ [0, +∞). Integrating both sides from 0 to t yields: ∫ t 0 ( ∥∇f2 (θs) + ηs∇f1 (θs)∥ 2 + (ξ − ηs) ψ (θs)) ds ≤ (f2 (θ0) − f2 (θt)) + ξ [f1(θ0) − ε]+ − ξ [f1(θt) − ε]+ ≤ (f2 (θ0) − f ∗ 2 ) + ξ (f1 (θ0) − f ∗ 1 ) . (26) Taking ξ → +∞ in Eq. (26) gives ∫ t 0 ψ (θs) ds ≤ f1 (θ0) − f ∗ 1 , (27) which implies mins∈[0,t] ψ (θs) ≤ 1 t ∫ t 0 ψ (θs) ds ≤ 1 t (f1 (θ0) − f ∗ 1 ). 19 C.3 Proof of Proposition 1 Proof of Proposition 1. As θt converges to θ∗ for t → +∞ and given the continuity of ψ(θ) and ∇f1(θ), it follows that limt→+∞ ψ (θt) = ψ (θ∗), and limt→+∞ ∥∇f1 (θt)∥ = ∥∇f1 (θ∗)∥. Given ψ(θ) ≥ 0 and ε = f ∗ 1 , Eq. (26) establishes that ∫ +∞ 0 ψ (θt) dt ≤ f1 (θ0) − f ∗ 1 < +∞. Consequently, limt→+∞ ψ (θt) = ψ (θ∗) = 0. Given θ∗ as a limit point of {θt}, there exists an increasing sequence {tn : n = 1, 2, · · · } such that tn → +∞ and θtn → θ∗ as n → +∞. The continuity of ψ(θ) and ∇f1(θ) ensures limn→+∞ ψ (θtn ) = ψ (θ∗) = 0, and limn→+∞ ∥∇f1 (θtn )∥ = ∥∇f1 (θ∗)∥. Since ψ (θ∗) = 0 and the sign condition of ψ(θ), it implies sign (f1 (θ∗) − f ∗ 1 ) = sign (ψ (θ∗)) = 0. There- fore f1 (θ∗) = f ∗ 1 and θ∗ is a minimum point of f1(θ). This gives limn→+∞ ∥∇f1 (θtn )∥ = ∥∇f1 (θ∗)∥ = 0. Given limt→+∞ gt = 0, we deduce that limt→+∞ ∥∇f2 (θt) + ηt∇f1 (θt)∥ = limt→+∞ ∥gt∥ = 0. Addi- tionally, employing ψ(θ) ≥ 0, Eq (23) implies limt→+∞ Kτ (θt, ηt) = 0 for some τ > 0. Combining limt→+∞ ∥∇f2 (θt) + ηt∇f1 (θt)∥ = 0 and ∇f1 (θ∗) = limn→+∞ ∇f1 (θtn ) = 0, we can derive ∥∇f2 (θt) + ηt∇f1 (θt)∥ = ∥∇f2 (θt) + ηt (∇f1 (θt) − ∇f1 (θ∗))∥ = ∥ ∥∇f2 (θt) + ηt∇2f1 ( θ′ t) (θt − θ∗)∥ ∥ = ∥ ∥∇f2 (θt) + ∇ 2f1 ( θ′ t) ω′ t∥ ∥ . where θ′ t is a convex combination of θt and θ∗, and we defined ω′ t = ηt (θt − θ∗). Define ωt = ( ∇2f1 (θ′ t) )+ ∇f2 (θt), where ( ∇ 2f1 (θ′ t))+ denotes the Moore-Penrose pseudo-inverse of matrix ∇2f1 (θ′ t), which satisfies that ωt = arg min ω∈Rd { ∥ω∥ s.t. ω ∈ arg min w ∥ ∥∇f2 (θt) + ∇2f1 ( θ′ t) ω∥ ∥ } . It follows that ∥ ∥∇f2 (θt) + ∇2f1 ( θ′ t) ωt∥ ∥ ≤ ∥ ∥∇f2 (θt) + ∇ 2f1 (θt) ω′ t∥ ∥ = ∥∇f2 (θt) + ηt∇f1 (θt)∥ . Given ∥∇f2 (θtn ) + ηtn ∇f1 (θtn )∥ → 0 as n → +∞, we have ∥ ∥∇f2 (θtn ) + ∇ 2f1 (θ′ tn ) ωtn ∥ ∥ → 0. Assuming θtn → θ∗ and θ′ tn → θ∗ as n → +∞, and by the constant rank condition and relevant corol- lary of Stewart (1977) (rephrased in Lemma 2), we deduce ( ∇ 2f1 (θ′ tn ) )+ → ( ∇ 2f1 (θ∗))+ and hence ωtn → ω∗ as n → +∞, where ω∗ := ( ∇ 2f1 (θ∗))+ ∇f2 (θ∗). Thus, ∥ ∥∇f2 (θt) + ∇ 2f1 (θ′ t) ωt∥ ∥ →∥ ∥∇f2 (θ∗) + ∇2f1 (θ∗) ω∗∥ ∥, leading to ∥ ∥∇f2 (θ∗) + ∇2f1 (θ∗) ω∗∥ ∥ = 0, which implies that θ∗ satisfies the second-order KKT conditions for Eq. (22). Given the convexity of f1(θ) and f2(θ) with respect to θ, then f2(θ∗) is the minimum in the feasible set Ω = {θ : f1(θ) ≤ ε}, without any ˆθ ∈ Ω such that f2(ˆθ) < f2(θ∗). Consequently, θ∗ is a solution to Eq. (8). According to Chankong and Haimes [10], this solution is unique without further checking, as affirmed by theorem of Miettinen (rephrased in Lemma 3), θ∗ is Pareto optimal. Therefore, combining the conclusions, θ∗ is established as both the minimum of f1(θ) and Pareto optimal, confirming its status as Pareto optimal for complete unlearning. Lemma 2. Corollary 3.5 of Stewart (1977) [58]. Let {At} be a sequence of matrices converging to A∗ as t → +∞. The condition limt→+∞ A + t = A + ∗ is equivalent to the condition that rank(At) = rank(A∗) for all t sufficiently large. Lemma 3. Theorem 3.2.4 of Miettinen (1999) [42]. A point θ∗ ∈ Ω is Pareto optimal if it is a unique solution of ε-constraint problem (Eq. (6)) for any given upper bound vector ε = (ε1, . . . , εℓ−1, εℓ+1, . . . , εt) T . C.4 Proof of Proposition 2 Proof of Proposition 2. Since θt is stationary, ˙θt = −gt = 0, implying d dt Pξ(θt) = 0 for all ξ ≥ 0. From Eq. (24), we have d dt Pξ(θt) ≤ −Kξ−ηt (θt, ηt). Consequently, Kξ−ηt (θt, ηt) ≤ 0 for all ξ ≥ ηt. Setting ξ = ηt + τ , where τ ≥ 0, it follows that Kτ (θt, ηt) = 0. This implies that θ∗ satisfies the first-order KKT conditions for Eq. (19), i.e., there exists a Lagrange multiplier η∗ ∈ [0, +∞) such that ∇f2 (θ∗) + η∗∇f1 (θ∗) = 0, f1 (θ∗) ≤ ε, η∗ (f1 (θ∗) − ε) = 0. 20 As affirmed by theorem of Miettinen (rephrased in Lemma 4), θt is a Pareto optimal solution. Lemma 4. Theorem 3.1.8 of Miettinen (1999) [42]. (Karush-Kuhn-Tucker sufficient condition for Pareto optimality) Let the objective and the constraint functions of problem Eq. (9) be convex and continuously differentiable at a decision vector θ∗ ∈ Ω. A sufficient condition for θ∗ to be Pareto optimal is that there exist multipliers µ ∗ > 0 and η∗ > 0 such that (1) µ ∗∇f2 (θ∗) + η∗∇f1 (θ∗) = 0 (2) η∗ (f1 (θ∗) − ε) = 0. C.5 Proof of Proposition 3 Proof of Proposition 3-1. Given that ψ(θ) ≥ 0, we recall conclusions from Proposition 4-2: min s∈[0,t] ψ (θs) ≤ 1 t (f1 (θ0) − f ∗ 1 ) . Taking ξ = 0 in Eq. (26) gives ∫ t 0 ∥∇f2 (θs) + ηs∇f1 (θs)∥2ds ≤ ∫ t 0 ηsψ (θs) ds + (f2 (θ0) − f ∗ 2 ) . To derive an upper bound for ∫ t 0 ∥∇f2 (θs) + ηs∇f1 (θs)∥ 2ds, the principal challenge lies in bounding ∫ t 0 ηsψ (θs) ds. Given the assumption 0 ≤ ψ (θt) ≤ α∥∇f1 (θt)∥δ, where δ ≥ 1, and applying Lemma 5, we obtain: ηtψ (θt) ≤ (α∥∇f1 (θt)∥δ−1 + ∥∇f2 (θt)∥) α 1 δ ψ (θt) 1− 1 δ ≤ Υψ (θt)1− 1 δ , where Υ = supθ∈Rd ( α∥∇f1(θ)∥δ−1 + ∥∇f2(θ)∥) α 1 δ . This leads to ∫ t 0 ηsψ (θs) ds ≤ Υ ∫ t 0 ψ (θs)1− 1 δ ds ≤ Υ (∫ t 0 ψ (θs) ds)1− 1 δ (∫ t 0 1ds) 1 δ ≤ Υ (∫ t 0 ψ (θs) ds)1− 1 δ t 1 δ ≤ Υ (f1 (θ0) − f ∗ 1 ) 1− 1 δ t 1 δ . Thus, it follows that min s∈[0,t] ∥∇f2 (θs) + ηt∇f1 (θs)∥2 ≤ 1 t ∫ t 0 ∥∇f2 (θs) + ηt∇f1 (θs)∥2ds ≤ 1 t ∫ t 0 ηsψ (θs) dt + 1 t (f2 (θ0) − f ∗ 2 ) ≤ 1 t 1− 1 δ Υ (f1 (θ0) − f ∗ 1 )1− 1 δ + 1 t (f2 (θ0) − f ∗ 2 ) . Since ∥gs∥ 2 = ∥∇f2 (θs) + ηt∇f1 (θs)∥2, for any time t ∈ [0, +∞), we derive the following inequalities min s∈[0,t] ∥gs∥ 2 ≤ Υ ( f1(θ0) − f ∗ 1 t )1− 1 δ + f2(θ0) − f ∗ 2 t . Combine the conclutions above, if ψ(θ) = α∥∇f1(θ)∥δ, we can further assert mins∈[0,t] ∥∇f1 (θs)∥ = O (1/t 1 δ ) and mins∈[0,t] ∥gs∥ = O (1/t 1 2 − 1 2δ ). Hence, the exponent δ controls the convergence rates of ∥∇f1 (θt)∥ (measuring the minimization of f1(θ)), and that of ∥gt∥ (measuring the minimization of f2(θ)). If ψ(θ) = c ln(1+γ∥∇f1(θ)∥), where cγ ≤ α and δ = 1. Since 0 ≤ ψ(θ) ≤ α∥∇f1(θ)∥δ, the assumptions of Proposition 4 are satisfied. Consequently, we obtain mins∈[0,t] ∥∇f1 (θs)∥ = O (e 1 ct ) and mins∈[0,t] ∥gs∥2 = O (1/t 1 2 − 1 2δ ). 21 Proof of Proposition 3-2. If ψ(θ) = β(f1(θ)−ε)δ, where δ = 2n+1, n ∈ N. According to Proposition 4-1,we deduce that mins∈[0,t] β[(f1(θs) − ε)δ]+ ≤ 1 t [f1(θ0) − ε]+. Consequently, we obtain mins∈[0,t][f1(θs) − ε]+ = O (1/t 1 δ ) . Lemma 5. Let ηt = minη≥0 { ∥∇f2 (θt) + η∇f1 (θt)∥2 − ηψ (θt)} = max ( ψ(θt)−∇f2(θt) ⊤∇f1(θt) ∥∇f1(θt)∥2 , 0 ) and assume 0 ≤ ψ(θt) ≤ α∥∇f1(θt)∥ δ for α ≥ 0 and δ ≥ 1. Then ηtψ(θt) ≤ ( α∥∇f1(θt)∥δ−1 + ∥∇f2(θt)∥) α 1 δ ψ(θt)1− 1 δ . (28) Proof of Lemma 5. Given ψ(θt) ≤ α∥∇f1(θt)∥δ, we have ψ(θt) ∥∇f1(θt)∥ ≤ α∥∇f1(θt)∥δ−1, and ψ(θt) ∥∇f1(θt)∥ ≤ α 1 δ ψ(θt) 1− 1 δ . With ψ(θt) ≥ 0, the upper bound for ηt simplifies to ηt = max ( ψ(θt) − ∇f2(θt)⊤∇f1(θt), 0 ) ∥∇f1(θt)∥ 2 ≤ ψ(θt) + ∥∇f2(θt)∥∥∇f1(θt)∥ ∥∇f1(θt)∥2 . Therefore, ηtψ(θt) ≤ ψ(θt)2 ∥∇f1(θt)∥2 + ∥∇f2(θt)∥ ψ(θt) ∥∇f1(θt)∥ ≤ ( α∥∇f1(θt)∥δ−1 + ∥∇f2(θt)∥) ψ(θt) ∥∇f1(θt)∥ ≤ ( α∥∇f1(θt)∥δ−1 + ∥∇f2(θt)∥) α 1 δ ψ(θt)1− 1 δ . D More Details of Experiments D.1 Evaluation Metrics IS. Following [36], for ImageNet-1K, we directly use the Inception-v3 model checkpoint to calculate the IS score. For Places-365, we use the Resnet-50 model checkpoint to calculate IS scores [73]. FID. Regardless of whether it is ImageNet-1K or Places-365, we directly use the Inception-v3 model check- point to calculate the FID score. CLIP. Following [36], whether it is for ImageNet-1K or Places-365, we use the ViT-H-14 model checkpoint to calculate the clip embedding vectors of the generated images and the ground truth images [47]. Afterward, we calculate the cosine similarity between the two vectors as the clip score. D.2 Hyper-parameter of Experiments MAE. We set the learning rate to 10 −4 with no weight decay. Both baselines and our method employ AdamW as the foundational optimizer with β = (0.90, 0.95), with the distinction being that our method necessitates some improvements on the basic optimizer. We set the input image resolution to 224×224 and batch size to 32. Simultaneously, we set the coefficient of ψ(θ) in Phase I to α = 5, and the coefficient of ψ in Phase II to β = 5, followed by training for 5 epochs. Overall, it takes an hour on an NVIDIA A40 (48G) server. VQ-GAN. We set the learning rate to 10−4 with no weight decay. Both baselines and our method employ AdamW as the foundational optimizer with β = (0.90, 0.95). Our method necessitates some improvements on the basic optimizer. We set the input image resolution to 256×256 and batch size to 8. Simultaneously, we set the coefficient of ψ(θ) in Phase I to α = 10, and the coefficient of ψ(θ) in Phase II to β = 10, followed by training for 5 epochs. Overall, it takes two hours on an NVIDIA A40 (48G) server. Diffusion model. We set the learning rate to 10 −5 with no weight decay. Both baselines and our method employ Adam as the foundational optimizer. Our method necessitates some improvements on the basic optimizer. We set the input image resolution to 256×256 and batch size to 8. Simultaneously, we set the coefficient of ψ(θ) in Phase I to α = 1, and the coefficient of ψ(θ) in Phase II to β = 1, followed by training for 4 epochs. Overall, it takes twelve hours on an NVIDIA A40 (48G) server. 22 E Robustness to Retain Samples Availability In machine unlearning, sometimes the real retain samples are not available due to data retention policies. To tackle this challenge, following [36], we assess our method using images from other classes as substitutes for real retain samples. For instance, on ImageNet-1K, since we have already selected 200 classes, we randomly chose some images from the remaining 800 classes to act as a \"proxy retain set\" during the unlearning process. We incrementally reduce the proportion of real retain samples in the retain set and increased the proportion of proxy retain samples, with the experimental results presented in Table 3. As demonstrated, our method is largely unaffected by the reduced availability of retain samples, indicating robust performance. Table 3: Results of center cropping 50% of the images under different retain set usage proportions. ↑ indicates higher is better, and ↓ indicates lower is better. ‘F’ and ‘R’ stand for the forget set and retain set, respectively. Here, all results are based on the solution with the highest degree of unlearning completeness in Phase I. MAE VQ-GAN Diffusion Models IS FID CLIP IS FID CLIP IS FID CLIP F ↓ R ↑ F ↑ R ↓ F ↓ R ↑ F ↓ R ↑ F ↑ R ↓ F ↓ R ↑ F ↓ R ↑ F ↑ R ↓ F ↓ R ↑ Original 21.59 21.83 16.28 14.87 0.88 0.88 23.74 24.06 21.80 18.17 0.78 0.85 16.90 19.65 82.12 81.51 0.89 0.91 100% 12.33 17.47 154.60 68.453 0.69 0.75 13.23 22.55 139.21 26.39 0.46 0.82 11.84 18.47 165.05 95.42 0.55 0.81 80% 12.32 17.46 150.05 73.14 0.70 0.73 13.27 22.30 138.49 24.83 0.46 0.81 11.91 18.10 167.32 98.82 0.55 0.80 60% 12.22 17.42 150.55 74.22 0.70 0.73 13.24 22.54 140.35 24.92 0.61 0.81 12.06 18.53 165.24 98.43 0.60 0.80 40% 112.29 17.43 150.27 73.63 0.70 0.74 12.77 22.39 141.67 25.84 0.61 0.81 12.05 18.64 168.83 96.42 0.60 0.79 20% 12.50 17.68 147.45 70.75 0.70 0.74 12.77 22.39 144.38 28.08 0.60 0.81 13.49 18.67 168.26 95.47 0.57 0.79 0 12.21 17.68 147.31 68.09 0.70 0.74 12.39 22.35 147.17 29.79 0.62 0.80 13.24 18.76 168.43 96.63 0.60 0.79 F More Generated Images: Baselines vs Ours We conduct various generative tasks on three mainstream I2I generative models (i.e., MAE, VQ-GAN, and the diffusion model), including image expansion, inpainting, and reconstruction, to assess both baselines and our proposed method. Specifically, we conduct evaluations of image inpainting and expansion tasks on VQ-GAN, image reconstruction tasks on MAE, and image inpainting tasks on the diffusion model. The results indicate that our method can adapt to mainstream I2I generative models and various image generation tasks. VQ-GAN. We conduct experiments on image inpainting and expansion task unlearning on VQ-GAN, where examples of the image inpainting tasks are illustrated in Figure 5, and examples of image expansion can be referred to in Appendix H. Our unlearning method is effective for both image inpainting and image expansion tasks, and it significantly surpasses baselines. MAE. We conduct experiments on unlearning image reconstruction tasks on the MAE. As shown in figure 6, our unlearning method is also effective in the task of image reconstruction, with the effects of unlearning showing a significant advantage over baselines. Diffusion model. We validate our unlearning framework on the diffusion model task for image inpainting. As shown in figure 7, the results indicate that our method is equally applicable to diffusion models, and the effectiveness of unlearning surpasses that of baselines. G More Generated Images: Different Degrees of Completeness We validate the control effect of our controllable unlearning framework across multiple generative tasks in three mainstream I2I generative models. The results demonstrate that our controllable unlearning framework can effectively control unlearning across various image generation tasks of mainstream I2I generative models. VQ-GAN. We center-cropp the image by 50% and utilize the VQ-GAN for image inpainting. Subsequently, we applied our unlearning framework to enforce unlearning. The results in Figure 8 demonstrate the effectiveness of our method, with the control effect being very pronounced. MAE. We verify the control effect of our controllable unlearning framework within the reconstruction task using the MAE. The results in Figure 9 indicate that our method can effectively control the completeness of unlearning in image reconstruction tasks as well. Diffusion model. We validate the control effect of our controllable unlearning framework within the inpainting task of a diffusion model. As shown in Figure 10, the findings illustrate that our method can 23 (a) Forget Set Ground Truth Input Original Model Max Loss Retain Label Noisy Label Composite Loss Ours (a) Forget Set (b) Retain Set Ground Truth Input Original Model Max Loss Retain Label Noisy Label Composite Loss Ours (b) Retain Set Figure 5: VQ-GAN: generated images of cropping 50% at the center of the image. The upper part (a) represents the forget set, while the lower part (b) represents the retain set. \"Ours\" denotes the boundary condition of unlearning obtained in Phase I, which represents the point of the highest degree of unlearning completeness. It is evident that our method significantly outperforms baselines in terms of the unlearning effect on the forget set, most closely approximating Gaussian noise, and exhibits the least performance degradation on the retain set. 24 (a) Forget Set Ground Truth Input Original Model Max Loss Retain Label Noisy Label Composite Loss Ours (a) Forget Set (b) Retain Set Ground Truth Input Original Model Max Loss Retain Label Noisy Label Composite Loss Ours (b) Retain Set Figure 6: MAE: reconstruction of random masked images. We set the proportion of the random mask to 50%. The upper part (a) represents the forget set, while the lower part (b) represents the retain set. \"Ours\" denotes the boundary condition of unlearning obtained in Phase I, which represents the point of the highest degree of unlearning completeness. 25 (a) Forget Set Ground Truth Input Original Model Max Loss Retain Label Noisy Label Composite Loss Ours (a) Forget Set (b) Retain Set Ground Truth Input Original Model Max Loss Retain Label Noisy Label Composite Loss Ours (b) Retain Set Figure 7: Diffusion model: generated images of cropping 50% at the center of the image. The upper part (a) represents the forget set, while the lower part (b) represents the retain set. \"Ours\" denotes the boundary condition of unlearning obtained in Phase I, which represents the point of the highest degree of unlearning completeness. 26 (a) Forget Set Ground Truth Input Original Model Boundary-𝜺𝒎𝒊𝒏 Highest Degree Relax-𝜺𝟏 25% Relax-𝜺𝟐 50% Boundary-𝜺𝒎𝒂𝒙 Lowest Degree Relax-𝜺𝟑 75% (a) Forget Set Ground Truth Input Original Model Relax-𝜺𝟏 25% Relax-𝜺𝟐 50% Boundary-𝜺𝒎𝒂𝒙 Lowest Degree Relax-𝜺𝟑 75% (b) Retain Set Boundary-𝜺𝒎𝒊𝒏 Highest Degree (b) Retain Set Figure 8: VQ-GAN: generated images of cropping 50% at the center of the image under different degrees of unlearning completeness requirements. The upper half (a) represents the forget set, and the lower half (b) represents the retain set. Our method first determines the two boundary conditions of unlearning, and then linearly increases the value of ε within its range (here, we increase by 25% each time) to adjust the balance between unlearning completeness and model utility. 27 (a) Forget Set Ground Truth Input Original Model Boundary-𝜺𝒎𝒊𝒏 Highest Degree Relax-𝜺𝟏 25% Relax-𝜺𝟐 50% Boundary-𝜺𝒎𝒂𝒙 Lowest Degree Relax-𝜺𝟑 75% (a) Forget Set Ground Truth Input Original Model Relax-𝜺𝟏 25% Relax-𝜺𝟐 50% Boundary-𝜺𝒎𝒂𝒙 Lowest Degree Relax-𝜺𝟑 75% (b) Retain Set Boundary-𝜺𝒎𝒊𝒏 Highest Degree (b) Retain Set Figure 9: MAE: construction of random masked images under different degrees of unlearning completeness requirements. We set the proportion of the random mask to 50%. The upper half (a) represents the forget set, and the lower half (b) represents the retain set. Our method first determines the two boundary conditions of unlearning, and then linearly increases the value of ε within its range (here, we increase by 25% each time) to adjust the balance between unlearning completeness and model utility. 28 effectively adjust the balance between the completeness of unlearning and the utility of the model in the context of a diffusion model. (a) Forget Set Ground Truth Input Original Model Boundary-𝜺𝒎𝒊𝒏 Highest Degree Relax-𝜺𝟏 25% Relax-𝜺𝟐 50% Boundary-𝜺𝒎𝒂𝒙 Lowest Degree Relax-𝜺𝟑 75% (a) Forget Set Ground Truth Input Original Model Relax-𝜺𝟏 25% Relax-𝜺𝟐 50% Boundary-𝜺𝒎𝒂𝒙 Lowest Degree Relax-𝜺𝟑 75% (b) Retain Set Boundary-𝜺𝒎𝒊𝒏 Highest Degree (b) Retain Set Figure 10: Diffusion model: generated images of cropping 50% at the center of the image under different degrees of unlearning completeness requirements. The upper half (a) represents the forget set, and the lower half (b) represents the retain set. Our method is also effective when applied to the diffusion model. H Ablation Study To verify the robustness of our method on mainstream I2I generative models and various image generation tasks, we conducted the following ablation studies: i) we vary the cropping patterns to demonstrate robustness across multiple image generation tasks; ii) we decrease the linear increment size of ε to validate that our method allows for more fine-grained control; and iii) we alter the cropping ratios to confirm the robustness of our method to changes in crop ratio. 29 H.1 More Generative Tasks In the main paper, we primarily showcase the performance of our controllable unlearning framework on the task of image inpainting. We validate the effectiveness of our controllable unlearning framework for image extension tasks on VQ-GAN by varying the patterns of cropping. The results indicate that our controllable unlearning framework is robust to different cropping patterns. H.1.1 Outpainting Task We retain 25% of the image center and utilize VQ-GAN for image outpainting. As shown in Figure 11, our method produces outpainting on the forget set that is most similar to Gaussian noise, and the outpainting performance on the retain set shows the least decline compared to the original model. H.1.2 Upward Extension Task We crop the upper half of the image, retain the lower half, and employ VQ-GAN for image extension. The results in Figure 12 indicate that our method produces extension on the unlearning set that closely resembles Gaussian noise, and on the retain set, the extension performance decreases the least compared to the original model. H.1.3 Leftward Extension Task We crop the right half of the image, retain the left half, and use VQ-GAN for image extension. As shown in Figure 13, our method produces leftward extension on the forget set that closest resembles Gaussian noise and, on the retain set, the leftward extension performance exhibits the minimal decrease compared to the original model. H.2 More Fine-grained control of unlearning completeness After obtaining two boundary points of unlearning, our controllable unlearning framework linearly increases within its valid range to balance the completeness of unlearning and the utility of the model. However, in the main paper, the increase of ε is by 25% each time. For example, if the range of ε is [1,9], then the sequence of ε values would be {3,5,7}. It is evident that the increments of ε are quite substantial, which results in a coarser granularity of control. Here, we reduce the linear increment of ε to extend the effectiveness of our controllable unlearning framework across various image generation tasks in VQ-GAN. The results show that our framework can achieve fine-grained control. H.2.1 Outpainting Task We retain the central 25% of the image and utilize VQ-GAN for image outpainting. The results in Figure 14 show that the performance of our controllable unlearning framework on the forget set gradually improves with the increase of ε, and the extent of decline in outpainting performance on the retain set, compared to the original model, is also reducing. H.2.2 Upward Extension Task We retain the lower half of the image center and crop the upper half, employing VQ-GAN for image extension. As shown in Figure 15, results indicate that, with an increase in the value of ε, the upward extension effectiveness on the forget set of our controllable unlearning framework gradually improves. Concurrently, the degree of decrease in upward extension effectiveness on the retain set, in comparison to the original model, also diminishes. H.2.3 Leftward Extension Task We retain the right half of the image and utilize VQ-GAN to extend the image from the left. The results in Figure 16 demonstrate that the leftward extension performance on the forget set of our controllable unlearning framework progressively improves with the increase of ε, and the reduction in leftward extension performance on the retain set is also diminishing compared to the original model. H.3 Varying Cropping Patterns and Ratios In the preceding sections, we have demonstrated the performance of our controllable unlearning framework under various cropping patterns, yet the cropping ratio remained constant. By altering the cropping ratio on VQ-GAN, we validate the effectiveness of our controllable unlearning framework at different cropping ratios. The results indicate that our controllable unlearning framework is robust to different cropping ratios. 30 (a) Forget Set Ground Truth Input Original Model Max Loss Retain Label Noisy Label Composite Loss Ours (a) Forget Set (b) Retain Set Ground Truth Input Original Model Max Loss Retain Label Noisy Label Composite Loss Ours (b) Retain Set Figure 11: Outpainting by VQ-GAN. We retain 25% of the image center. The upper half (a) designated as the unlearning set and the lower half (b) as the retain set. For each subset, we compared the performance of both the baselines and our method on the outpainting task, where \"Ours\" represents the boundary condition of unlearning in Phase I, indicating the point of highest degree of unlearning completeness. The results show that our method significantly outperforms the baselines on the outpainting task. 31 (a) Forget Set Ground Truth Input Original Model Max Loss Retain Label Noisy Label Composite Loss Ours (a) Forget Set (b) Retain Set Ground Truth Input Original Model Max Loss Retain Label Noisy Label Composite Loss Ours (b) Retain Set Figure 12: Upward extension by VQ-GAN. We retain 50% of the lower half of the image. The upper half (a) is the forget set, and the lower half (b) is the retain set. For each set, we compare the performance of the baselines and our method on the upward extension task, where \"Ours\" represents the unlearning boundary condition in Phase I, which is the point of the highest degree of unlearning completeness. The results suggest that our method also significantly outperforms the baselines on the upward extension task. 32 (a) Forget Set Ground Truth Input Original Model Max Loss Retain Label Noisy Label Composite Loss Ours (a) Forget Set (b) Retain Set Ground Truth Input Original Model Max Loss Retain Label Noisy Label Composite Loss Ours (b) Retain Set Figure 13: Leftward extension by VQ-GAN. We retain 50% of the right half of the image. The upper half (a) is the forget set, and the lower half (b) is the retain set. For each set, we compare the performance of the baselines and our method on the upward extension task, where \"Ours\" represents the unlearning boundary condition in Phase I, which is the point of highest degree of unlearning completeness. The results suggest that our method also significantly outperforms the baselines on the upward extension task. 33 (a) Forget Set Ground Truth Input Original Model Boundary-𝜺𝒎𝒊𝒏 Highest Degree Boundary-𝜺𝒎𝒂𝒙 Lowest Degree (a) Forget Set (b) Retain Set Ground Truth Input Original Model Boundary-𝜺𝒎𝒊𝒏 Highest Degree Boundary-𝜺𝒎𝒂𝒙 Lowest Degree (b) Retain Set Figure 14: Outpainting by VQ-GAN under different degrees of unlearning completeness. We retain 25% of the image center. The upper half (a) is the forget set, while the lower half (b) is the retain set. For each part, we compare the unlearning effects of our method at different values of ε. \"Highest\" and \"Lowest\" represent the conditions of the highest and lowest degree of unlearning completeness, respectively. We increase ε 16% each time. Simultaneously, compared to larger cropping ratios, the extent of variation in the images generated under our controllable unlearning framework will be smaller for smaller cropping ratios. H.3.1 Inpainting Task We retain one-sixteenth of the image center and use VQ-GAN for image inpainting. The results in Figure 17 show that our controllable unlearning framework significantly outperforms the baselines in terms of unlearning effect on the forget set, most closely approximating Gaussian noise, and exhibits a lesser decline in unlearning effect on the retain set than the baselines. Simultaneously, we can finely control the balance between unlearning completeness and model utility. H.3.2 Downward Extension Task We crop the bottom 25% of the image and utilize VQ-GAN for image extension from the bottom. As shown in Figure 19, the results demonstrate that our controllable unlearning framework significantly surpasses the baselines in terms of the unlearning effect on the forget set, closely approximating Gaussian noise, and shows a lesser reduction in unlearning effect on the retain set compared to the baselines. At the same time, we can finely adjust the balance between unlearning completeness and model utility. 34 (a) Forget Set Ground Truth Input Original Model Boundary-𝜺𝒎𝒊𝒏 Highest Degree Boundary-𝜺𝒎𝒂𝒙 Lowest Degree (a) Forget Set (b) Retain Set Ground Truth Input Original Model Boundary-𝜺𝒎𝒊𝒏 Highest Degree Boundary-𝜺𝒎𝒂𝒙 Lowest Degree (b) Retain Set Figure 15: Upward extension by VQ-GAN under different degrees of unlearning completeness. We retain 50% of the lower half of the image. The upper half (a) is the forget set, while the lower half (b) is the retain set. For each part, we compare the unlearning effects of our method at different values of ε. \"Highest\" and \"Lowest\" represent the conditions of the highest and lowest degree of unlearning completeness, respectively. We increase ε 16% each time. H.3.3 Rightward Extension Task We crop the right 25% of the image and utilize VQ-GAN for image extension from the bottom. The results in Figure 21 demonstrate that our controllable unlearning framework significantly surpasses the baselines in terms of the unlearning effect on the forget set, closely approximating Gaussian noise, and shows a lesser reduction in unlearning effect on the retain set compared to the baselines. At the same time, we can finely adjust the balance between unlearning completeness and model utility. I T-SNE Analysis for Controllable Unlearning In Table 2 of the main paper, we present the evaluation metrics corresponding to different degrees of unlearning completeness solutions (i.e., IS, FID and CLIP) obtained by our controllable unlearning framework in mainstream I2I generative models. Here, we analyze the images generated at different degrees of unlearning completeness for each corresponding model. We use T-SNE analysis to compare the clip embedding distances between the images generated on the forget set and retain set and the ground truth images. As shown in Figure 23, for any model, under the highest degree of unlearning completeness, the distance between the clip embeddings of the images generated on the forget set by the unlearned model and the ground truth images is larger, while the 35 (a) Forget Set Ground Truth Input Original Model Boundary-𝜺𝒎𝒊𝒏 Highest Degree Boundary-𝜺𝒎𝒂𝒙 Lowest Degree (a) Forget Set (b) Retain Set Ground Truth Input Original Model Boundary-𝜺𝒎𝒊𝒏 Highest Degree Boundary-𝜺𝒎𝒂𝒙 Lowest Degree (b) Retain Set Figure 16: Leftward extension by VQ-GAN under different degrees of unlearning completeness. We retain 50% of the right half of the image. The upper half (a) is the forget set, while the lower half (b) is the retain set. For each part, we compare the unlearning effects of our method at different values of ε. \"Highest\" and \"Lowest\" represent the conditions of the highest and lowest degree of unlearning completeness, respectively. We increase ε 16% each time. distance on the retain set is smaller. Simultaneously, as ε increases, the distance between the clip embeddings of the images generated on the forget set by the unlearning model and the ground truth images gradually decreases (still significantly higher than the situation of the retain set), and the distance on the retain set also gradually decreases. Lastly, among these three mainstream I2I generation model structures, the effect of VQ-GAN is the most significant. J Efficiency Experiments for Controllable Unlearning Framework In the main paper, we analyze the convergence efficiency corresponding to different control functions ψ(θ) at each phase from a theoretical perspective, and based upon this analysis, we aim to enhance the unlearning efficiency of our controllable unlearning framework. Here, we validate our analysis on three mainstream I2I generative models. During the two different phases of controllable unlearning, we design the form of the control function ψ(θ) separately. Specifically, in Phase I, we set ψ(θ) = α∥∇f1(θ)∥δ, where we test the convergence rates of f1(θ) and f2(θ), as well as the overall convergence rate, for δ = 1, δ = 2, δ = 3, and δ = 4. As shown in Figure 24, It is apparent that at Phase I for c = 2, that is ψ(θ) = α∥∇f1(θ)∥2, the overall convergence rate is optimal. 36 (a) Forget Set Ground Truth Input Original Model Max Loss Retain Label Noisy Label Composite Loss Ours (a) Forget Set (b) Retain Set Ground Truth Input Original Model Max Loss Retain Label Noisy Label Composite Loss Ours (b) Retain Set Figure 17: Generated images of cropping 25% at the center of the image. We crop the center 1/16 of the image. The upper half (a) is the forget set, and the lower half (b) is the retain set. For each set, we compare the performance of the baselines and our method on the inpainting task, where \"Ours\" represents the extreme case of the unlearning boundary in Phase I, that is, the point of highest degree of unlearning completeness. 37 (a) Forget Set Ground Truth Input Original Model Boundary-𝜺𝒎𝒊𝒏 Highest Degree Boundary-𝜺𝒎𝒂𝒙 Lowest Degree (a) Forget Set (b) Retain Set Ground Truth Input Original Model Boundary-𝜺𝒎𝒊𝒏 Highest Degree Boundary-𝜺𝒎𝒂𝒙 Lowest Degree (b) Retain Set Figure 18: Generated images of cropping 50% at the center of the image under different degrees of unlearning completeness requirements. We crop the central 1/16 of the image. The upper half (a) represents the forget set, and the lower half (b) represents the retain set. For each section, we compare the effectiveness of our method’s unlearning under different values of ε. Here, \"Highest\" and \"Lowest\" indicate the conditions of the highest and lowest degree of unlearning completeness, respectively. 38 (a) Forget Set Ground Truth Input Original Model Max Loss Retain Label Noisy Label Composite Loss Ours (a) Forget Set (b) Retain Set Ground Truth Input Original Model Max Loss Retain Label Noisy Label Composite Loss Ours (b) Retain Set Figure 19: Downward extension by VQ-GAN. We crop the bottom 25% of the image. The upper half (a) is designated as the forget set, and the lower half (b) as the retain set. For each section, we compared the performance of the baselines and our method on the downward extension task, where \"Ours\" denotes the unlearning boundary condition in Phase I, that is, the point of highest degree of unlearning completeness. 39 (a) Forget Set Ground Truth Input Original Model Boundary-𝜺𝒎𝒊𝒏 Highest Degree Boundary-𝜺𝒎𝒂𝒙 Lowest Degree (a) Forget Set (b) Retain Set Ground Truth Input Original Model Boundary-𝜺𝒎𝒊𝒏 Highest Degree Boundary-𝜺𝒎𝒂𝒙 Lowest Degree (b) Retain Set Figure 20: Downward extension by VQ-GAN under different degrees of unlearning completeness. We crop the bottom 25% of the image. The upper half (a) represents the forget set, and the lower half (b) represents the retain set. For each section, we compare the effectiveness of our method’s unlearning under different values of ε. Here, \"Highest\" and \"Lowest\" indicate the conditions of the highest and lowest degree of unlearning completeness, respectively. In Phase II, we set ψ(θ) = β(f1(θ) − ε)δ, where we tested the convergence rates for δ = 1 and δ = 3. Subsequently, we changed the form of ψ(θ) to ψ(θ) = β(f1(θ)−ε)δ∥∇f1(θ)∥2, and we tested the convergence rates for δ = 1 and δ = 3. Comparing the aforementioned scenarios, the overall optimal convergence rate in Phase II is obtained when ψ(θ) = β(f1(θ) − ε)1∥∇f1(θ)∥2. 40 (a) Forget Set Ground Truth Input Original Model Max Loss Retain Label Noisy Label Composite Loss Ours (a) Forget Set (b) Retain Set Ground Truth Input Original Model Max Loss Retain Label Noisy Label Composite Loss Ours (b) Retain Set Figure 21: Rightward extension by VQ-GAN. We crop the right 25% of the image. The upper half (a) is designated as the forget set, and the lower half (b) as the retain set. For each section, we compared the performance of the baselines and our method on the rightward extension task, where \"Ours\" denotes the unlearning boundary condition in Phase I, that is, the point of highest degree of unlearning completeness. 41 (a) Forget Set Ground Truth Input Original Model Boundary-𝜺𝒎𝒊𝒏 Highest Degree Boundary-𝜺𝒎𝒂𝒙 Lowest Degree (a) Forget Set (b) Retain Set Ground Truth Input Original Model Boundary-𝜺𝒎𝒊𝒏 Highest Degree Boundary-𝜺𝒎𝒂𝒙 Lowest Degree (b) Retain Set Figure 22: Rightward extension by VQ-GAN under different degrees of unlearning completeness. We crop the right 25% of the image. The upper half (a) represents the forget set, and the lower half (b) represents the retain set. For each section, we compare the effectiveness of our method’s unlearning under different values of ε. Here, \"Highest\" and \"Lowest\" indicate the conditions of the highest and lowest degree of unlearning completeness, respectively. 42 Before Unlearning: Forget Set Before Unlearning: Retain Set Unlearning: Forget Set× Unlearning: Retain Set× (i) Highest Degree (v) Lowest Degree(ii) 𝜀 − 25% (iii) 𝜀 − 50% (iv) 𝜀 − 75%(b) VQ-GAN (i) Highest Degree (v) Lowest Degree(ii) 𝜀 − 25% (iii) 𝜀 − 50% (iv) 𝜀 − 75%(C) Diffusion Model (i) Highest Degree (v) Lowest Degree(ii) 𝜀 − 25% (iii) 𝜀 − 50% (iv) 𝜀 − 75%(a) MAE Figure 23: T-SNE analysis between images generated by our method and ground truth images under different degrees of unlearning completeness. 43(a-i)5||Δ𝑓1(𝜃)||1(a-ii)5||Δ𝑓1(𝜃)||2(a-ii)5||Δ𝑓1(𝜃)||3(a-ii)5||Δ𝑓1(𝜃)||4 (a) MAE-𝜓𝜃(a-v)5(Δ𝑓1𝜃−𝜀)1(a-vi)5(Δ𝑓1𝜃−𝜀)3(a-vii)5(Δ𝑓1𝜃−𝜀)1||Δ𝑓1(𝜃)||2(a-viii)5(Δ𝑓1𝜃−𝜀)3||Δ𝑓1(𝜃)||2 (b) VQ-GAN-𝜓𝜃(b-i)10||Δ𝑓1(𝜃)||1(b-ii)10||Δ𝑓1(𝜃)||2(b-ii)10||Δ𝑓1(𝜃)||3(b-ii)10||Δ𝑓1(𝜃)||4(b-v)10(Δ𝑓1𝜃−𝜀)1(b-vi)10(Δ𝑓1𝜃−𝜀)3(b-vii)10(Δ𝑓1𝜃−𝜀)1||Δ𝑓1(𝜃)||2(b-viii)10(Δ𝑓1𝜃−𝜀)3||Δ𝑓1(𝜃)||2 (C) Diffusion Model-𝜓𝜃(c-i)||Δ𝑓1(𝜃)||1(c-ii)||Δ𝑓1(𝜃)||2(c-ii)||Δ𝑓1(𝜃)||3(c-ii)||Δ𝑓1(𝜃)||4(c-v)(Δ𝑓1𝜃−𝜀)1(c-vi)(Δ𝑓1𝜃−𝜀)3(c-vii)(Δ𝑓1𝜃−𝜀)1||Δ𝑓1(𝜃)||2(c-viii)(Δ𝑓1𝜃−𝜀)3||Δ𝑓1(𝜃)||2 Figure 24: The convergence rates under different control functions ψ(θ). As illustrated in figure, include three sections: MAE, VQ-GAN, and the diffusion model. Each section contains two rows, corresponding to Phase I and Phase II, respectively. The titles on each subplot indicate the forms of the control function ψ(θ). 44","libVersion":"0.3.2","langs":""}